:S:  Usually means {big S}, but may sometimes mean {paperclip}.

:sailboat: (p16)  A {boat} {hassle}d by a {Kok's galaxy}, a {figure-8} and two {eater3}s.  Found by Robert Wainwright in June 1984.
        ........*...........*........
        .......*.*.........*.*.......
        ........*...........*........
        .............................
        ......*****.......*****......
        .....*....*.......*....*.....
        ....*..*.............*..*....
        .*..*.**.............**.*..*.
        *.*.*.....*.......*.....*.*.*
        .*..*....*.*.....*.*....*..*.
        ....**..*..*.....*..*..**....
        .........**.......**.........
        .............**..............
        .............*.*.............
        ........*..*..*..............
        .......*.....................
        .....**..........***.........
        ..*......**.*....***.........
        .....*...*..*....***.........
        .....***.*...*......***......
        ..*...........*.....***......
        ...*...*.***........***......
        ....*..*...*.................
        ....*.**......*..............
        ..........**.................
        .........*...................
        .....*..*....................

:salvo:  A collection of spaceships, usually gliders, all travelling in the same direction.  Any valid glider construction {recipe} can be partitioned into no more than four salvos.  Compare {flotilla}.  In contrast with a {convoy}, the spaceships in a salvo are usually consumed by the reactions that they cause.  Simple examples include {block pusher} and {block pull}.
     Salvos may be {slow} or {synchronized}.  The following partially {synchronized} three-glider salvo produces an {LWSS} from a block.
        **........
        **........
        ..........
        ..........
        ***.......
        *.........
        .*........
        ..........
        .......***
        .......*..
        ........*.
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        .......***
        .......*..
        ........*.
   The above is a synchronized salvo and not a slow salvo, because the second glider must follow the first with the exact separation shown.  The third glider can be considered to be a slow glider, because it will still delete the temporary loaf no matter how many {tick}s it is delayed.  The {slow glider construction} entry includes an example of a true slow salvo.

:sawtooth:  Any finite pattern whose {population} grows without bound but does not tend to infinity.  (In other words, the population reaches new heights infinitely often, but also infinitely often returns to some fixed value.)  Conway's preferred plural is "sawteeth".
     The first sawtooth was constructed by Dean Hickerson in April 1991.  The current smallest known sawtooth was found by a conwaylife.com forum user with the online handle 'thunk'.  It has a bounding box of 74x60, and is the smallest known sawtooth in terms of its minimum repeating population of 177 cells. The following variant has a higher repeating population of 194 and an optimized bounding box of 62x56:
        .....................................................**.*.....
        .....................................................*.**.....
        ..............................................................
        ...........**.................................................
        ...........**.................................................
        ..............................................................
        ..............................................................
        ..............**............................**.......**.....**
        ....**........**.....................................**.....**
        .....*.....................................*.*................
        ....*......**............................*..............**....
        ....**.....**........................**.*.**............**....
        ......................................*.**....................
        .......................................*......................
        ..............................................................
        .................................**...........................
        .................................**...........................
        ..............................................................
        .............................**.....**........................
        .............................**.....**........................
        ..............................................................
        ..............................................................
        ..............................................................
        .....................***......................................
        .....................*..*.....................................
        .....................*.**.....................................
        ..............................................................
        ..............................................................
        ..............................................................
        ....................**............*.........*.................
        ....................*..*..........*.*.....***.................
        ..****...............***..........**.....*....................
        **....**.................................**...................
        **.....*......................................................
        ..**.*.*..............**......................................
        .......*..............**......................................
        ...*...*..........................*....*......................
        ...*....*.......................**.....*......................
        .....***...*.....................**...*.*.....................
        .....**....*.........................**.**....................
        ...........**.......................*.....*...................
        .............*.........................*......................
        .............***....................**...**...................
        ..............................................................
        ..............................................................
        ................*.....................*.......................
        ...............*.*****................*.......................
        ..............**.....*...............*........................
        ..............**...*..*.......................................
        ......................*.......................................
        ................**.*..*................**.....................
        ...................*..*................**.....................
        ....................**........................................
        ....................**.....*....*.............................
        .........................**.****.**...........................
        ...........................*....*.............................
   Patterns combining a fast {puffer} with a slower {spaceship} have also been constructed (see {moving sawtooth}).  See also {tractor beam}.

:SBM:  = {sliding block memory}

:Schick engine: (c/2 orthogonally, p12)  This {spaceship}, found by Paul Schick in 1972, produces a large {spark} (the 15 live cells at the rear in the {phase} shown below) which can be {perturb}ed by other c/2 spaceships to form a variety of {puffer}s.  See {blinker ship} for an example perturbation of the spark.  The diagram below shows the smallest form of the Schick engine, using two {LWSS}.  It is also possible to use two {MWSS}es or two {HWSS}es, or even an LWSS and an HWSS.
        ****..............
        *...*.........*...
        *...........**....
        .*..*..**.....***.
        ......***......***
        .*..*..**.....***.
        *...........**....
        *...*.........*...
        ****..............

:Schick ship:  = {Schick engine}

:scorpion: (p1)
        ...*...
        .***...
        *...**.
        *.*.*.*
        .**.*.*
        .....*.

:scrubber: (p2)  Found in 1971.
        ....*......
        ..***......
        .*.........
        .*..***....
        **.*...*...
        ...*...*...
        ...*...*.**
        ....***..*.
        .........*.
        ......***..
        ......*....

:SE:  = {switch engine}

:seal: (c/6 diagonally, p6)  The first diagonal {c/6 spaceship}, found by Nicolay Beluchenko in September 2005.
        ...*..**..........................
        .***.*.*.*........................
        .*..***..**.......................
        *..******.*.***...................
        .*..***.*.*****...................
        ......*.*.*.*.....................
        *.*...*.*.*****...................
        *..*.*..*.**...*..................
        ...*..**.......***................
        .*...*****.***..**................
        ....*.........*...................
        ..*.*.........*...................
        ....**.*****...*..................
        ......*.***..*.....**.............
        ......*..*...*.***.**.............
        ........**...***.*..*...*.........
        ........**....**.****...***.......
        ...................*.*..*.........
        .............*.*.....**..**.......
        .............*..*.....*.***.....*.
        .............*...*....**..*...*..*
        ...............***.....**........*
        ...............*.*..*..*.....**..*
        .................*..**.**.*..*....
        ................*.......*.*.......
        .................*...****.........
        ..................*...*...........
        ..................................
        .......................*..........
        ......................*.*.........
        .....................**...........
        .....................*.*..........
        .....................**...........
        .......................*..........
        ......................*...........

:search program:  A computer program or script that automates the search for Life objects having certain desired properties.  These are used because the difficulty of finding previously unknown Life objects now commonly exceeds the patience, speed, and accuracy of humans.  Various types of search programs are used for finding objects such as {spaceship}s, {oscillator}s, {drifter}s, {catalyst}s, {soup}s, {Garden of Eden}s, and {slow salvo}s.
     Some search programs generate {partial result}s as they are running, so even if they don't complete successfully, something of use might still be salvaged from the run.
     Example search programs are {dr}, {lifesrc}, {gfind}, and {Bellman}.
     There are other types of programs which don't perform searches as such, but instead perform large constructions.  These are used to correctly complete very complicated objects such as the {Caterpillar}, {Gemini}, {Caterloopillar}, and {universal constructor}-based spaceships such as the {Demonoid}s and {Orthogonoid}s.

:second glider domain:  The second glider domain of an {edge shooter} is the set of spacetime offsets, relative to the {glider} {stream} emitted by the edge shooter, where a second independent glider stream may be present without interfering with the edge shooter.  This is useful to know, because edge shooters are often used to generate glider streams very close to other glider streams, to make for example a {spaceship} {gun} or {converter}.

:second natural glider:  The glider produced at T=72 during the {evolution} of a {Herschel}.  This is the common edge-shooting glider output used in the {NW31} converter and several other converter variants.

:seed:  A {constellation} of still lifes and/or oscillators, which can be converted into another Life object when it is struck by one or more gliders.  Usually the resulting object is a rare still life or spaceship, more complex than the original constellation.  {Spartan} single-glider (1G) seeds are more commonly seen than multi-glider seeds, because a Spartan 1G seed can be readily constructed and {trigger}ed using a {slow salvo}.  See also {freeze-dried}.  For example, the following is a 14{sL} 1G seed for a c/7 loafer spaceship.
        ...................................*..........
        ..................................*...........
        ..................................***.........
        .............**...............................
        ..............*...............................
        ..............*.*.............................
        ...............**.............................
        ..............................................
        ...*..........................................
        ..*.*.........................................
        .*.*..........................................
        .**...........................................
        ..............**..............................
        .............*.*..............................
        .............**...............................
        ..............................................
        ..............................................
        ..............................................
        ....................**........................
        ...................*.*........................
        ..........*.........*.........................
        .........*.*....*.............................
        ..........**...*.*............................
        ..............*.*.............................
        ..............**..............................
        ..............................................
        .............................................*
        .........................**................***
        ....................**...**...............*...
        ...................*..*...................**..
        .*.................*..*.......................
        *.*.................**........................
        .**...........................................
        ..............................................
        ..............................................
        ..............................................
        .....................**.......................
        .....................*.*....**................
        ......................*.....*.*...............
        .............................**...............
        .................................**...........
        .................................**...........
        ..............................................
        ..............................................
        ......................**......................
        .....................*..*.....................
        .....................*..*.....................
        ......................**......................

:Seeds of Destruction Game:  An interactive search application written by Paul Chapman in 2013.  Its primary purpose was to assist in the design of self-destruct circuits in self-constructing circuitry.  It has also regularly been helpful in completing glider syntheses, and was used to find the {31c/240} base reaction for the {shield bug} and {Centipede} spaceships.

:self-constructing:  A type of pattern, generally a {macro-spaceship}, that contains encoded construction information about itself, and makes a complete copy of itself using those instructions.  The {Gemini}, {linear propagator}, {spiral growth} patterns, {Demonoid}s and {Orthogonoid} are examples of self-constructing patterns.  Self-constructing spaceships often have trivially adjustable speeds.  In many cases, the direction of travel can also be altered, less easily, by changing the encoded {construction recipe}.  Compare {self-supporting}, {elementary}.

:self-supporting:  A type of pattern, specifically a {macro-spaceship}, that constructs {signal}s or {track}s or other scaffolding to assist its movement, but does not contain complete information about its own structure.  Examples include the Caterpillar, {Centipede}, {half-baked knightship}, {waterbear}, and the {Caterloopillar}s.  {Caterpillar} has been used as a general term for self-supporting spaceships, but it is not very appropriate for the HBKs.
     In general a self-supporting pattern cannot be trivially adjusted to alter its speed or direction.  The variable speeds of the HBKs and the Caterloopillars are exceptions, but their direction of travel is fixed, and a specific Caterloopillar can't be made to change its speed without completely rebuilding it.  Compare {self-constructing}, {elementary}.

:semi-cenark:  Either of two {semi-Snark} variants discovered by Tanner Jacobi in November 2017.  The name is due to the initial {converter}, which produces a {century} output for every two input {glider}s.  The minimum safe repeat time is 43 ticks for the smaller initial {catalyst} shown in {CC semi-cenark} and {CP semi-cenark}, or 42 ticks with the slightly larger catalyst variant shown below.  There is also {overclocking} possible at period 36, 38, or 39.  The reset glider can be followed immediately by a new trigger glider, as shown below, so the minimum repeat time for an {intermittent stream} of gliders is only 50 ticks.
        *.*.................................
        .**.................................
        .*..................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        .........*.*........................
        ..........**........................
        ..........*.........................
        .............*......................
        ..............**....................
        .............**.....................
        .............................*......
        ...........................***......
        ..........................*.........
        ..........................**........
        ....................................
        ....................................
        ......................*.............
        ..............**.......**..*........
        ..............*..*....**..*.*.......
        ............**..**........**........
        ...........*..**....................
        ...........**...**..................
        ................*.*.................
        .................*..................
        ..................................**
        ................................*..*
        .....................**.........***.
        ......................*......*......
        ...................***.......****...
        ...................*............*...
        ...............................*....
        ...............................**...

:semi-Snark:  Any small {stable} {signal} {conduit} that produces one output glider for every two input gliders, with a 90 degree reflection.  These can act as period-doublers for any glider stream whose period is at least equal to their repeat time, and so adding one of these to a single glider {gun} often results in a pattern much smaller than the older {technology} of crossing the output of two guns.
     The available semi-Snarks differ in their complexity, size, repeat time, and the colour of their output gliders.  The {CC semi-Snark} was the first one found, and the term "semi-Snark" is often used specifically for this object.  The "CC" prefix stands for {colour-changing}, by contrast with the more recently discovered {colour-preserving} {CP semi-Snark}.
     There are also CC and CP variants of a semi-Snark based on a two-{glider} to {century} {converter} discovered by Tanner Jacobi in November 2017.  These {semi-cenark}s are the fastest semi-Snarks known as of June 2018, with a {repeat time} as low as 50 ticks, or a periodic input rate as low as 36 ticks.

:sesquihat: (p1)  Halfway between a {hat} and a {twinhat}.
        ....*..
        **.*.*.
        .*.*.*.
        .*.*.**
        ..*....

:SGR:  Abbreviation for {stable} {glider} {reflector}.  This term is no longer in use.

:shield bug: (31c/240 orthogonally, p240)  The first 31c/240 {macro-spaceship}, constructed by Dave Greene on September 9, 2014.

:shillelagh: (p1)
        **...
        *..**
        .**.*

:ship: (p1)  The term is also used as a synonym of {spaceship}.
        **.
        *.*
        .**
     A ship can be used as a {catalyst} in some situations.  For example, it can suppress two of the {blinker}s from an evolving {traffic light}:
        ...**.
        ...*.*
        ....**
        ......
        *.....
        **....
        *.....
   It is also a one-glider {seed} for the {engine} of the {queen bee shuttle}:
        ***..**.
        ..*..*.*
        .*....**

:ship in a bottle: (p16)  Found by Bill Gosper in August 1994. See also {bottle}.
        ....**......**....
        ...*..*....*..*...
        ...*.*......*.*...
        .**..***..***..**.
        *......*..*......*
        *.**..........**.*
        .*.*..........*.*.
        ...**...**...**...
        .......*.*........
        .......**.........
        ...**........**...
        .*.*..........*.*.
        *.**..........**.*
        *......*..*......*
        .**..***..***..**.
        ...*.*......*.*...
        ...*..*....*..*...
        ....**......**....

:ship on boat:  = {ship tie boat}

:ship on ship:  = {ship-tie}

:ship-tie: (p1)  The name is by analogy with {boat-tie}.
        **....
        *.*...
        .**...
        ...**.
        ...*.*
        ....**

:ship tie boat: (p1)
        **....
        *.*...
        .**...
        ...**.
        ...*.*
        ....*.

:short keys: (p3)  Found by Dean Hickerson, August 1989.  See also {bent keys} and {odd keys}.
        .*........*.
        *.***..***.*
        .*..*..*..*.
        ....*..*....

:shotgun:  A {gun} that fires a {salvo} of multiple {spaceship}s, almost always {glider}s, on parallel {lane}s.  Two to four shotguns are often combined to turn a {glider synthesis} into a gun or {factory} for that synthesis.

:shoulder:  The fixed upper end of a {construction arm}, generally consisting of one or more glider {gun}s or {edge shooter}s aimed at an {elbow} object.

:shuttle:  Any {oscillator} which consists of an active region moving back and forth between stabilizing objects.  The most well-known examples are the {queen bee shuttle} (which has often been called simply "the shuttle") and the {twin bees shuttle}.  See also {p54 shuttle}, {p130 shuttle} and {Eureka}.  Another example is the p72 {R-pentomino} shuttle that forms part of the pattern given under {factory}.

:siamese:  A term used in naming certain {still life}s (and the {stator} part of certain {oscillator}s).  It indicates that the object consists of two smaller objects sharing two or more cells.  See {snake siamese snake} and {loaf siamese barge} for examples.

:side:  Half a {sidewalk}.  In itself this is unstable and requires an {induction coil}.
        **...
        *.***
        ....*

:sidecar:  A small {tagalong} for an {HWSS} that was found by Hartmut Holzwart in 1992.  The resulting {spaceship} (shown below) has a {phase} with only 24 cells, making it in this respect the smallest known spaceship other than the {standard spaceship}s and some trivial two-spaceship {flotilla}s derived from them.  Note also that an HWSS can support two sidecars at once.
        .*......
        *.....*.
        *.....*.
        *****.*.
        ........
        ....**..
        ..*....*
        .*......
        .*.....*
        .******.

:side-shooting gun:  = {slide gun}

:sidesnagger:  A {Spartan} eater found by Chris Cain in May 2015 with functionality similar to the {eater5}, as shown below.  It has one {lane} less diagonal {clearance} on the high-clearance side than other eater5 variants, due to the presence of the boat.  A good use of the sidesnagger can be seen in {p130 shuttle}.  See also {highway robber}.
        ..*.............
        *.*.............
        .**.............
        ................
        ................
        ................
        .........*......
        ........*.......
        ........***.....
        ................
        ................
        .........*......
        ........*.*.....
        .......*..*...**
        ........**....**
        ....*...........
        ...*.*..........
        ...**...........
        .........**.....
        .........**.....

:side-tracking:  See {universal constructor}.

:sidewalk: (p1)
        .**.**
        ..*.*.
        .*..*.
        .*.*..
        **.**.

:siesta: (p5)  Found by Dave Buckingham in 1973.  Compare {sombreros}.
        ...........**...
        ...**.....*.*...
        ...*.*....*.....
        .....*...**.*...
        ...*.**.....***.
        .***.....*.*...*
        *...*.*.....***.
        .***.....**.*...
        ...*.**...*.....
        .....*....*.*...
        ...*.*.....**...
        ...**...........

:signal:  Movement of information through the Life universe.  Signals can be carried by {spaceship}s, {fuse}s, {drifter}s, or {conduit}s. Spaceships can only transfer a signal at the speed of the spaceship, while fuses can transfer a signal at speeds up to the {speed of light}.
     In practice, many signals are encoded as the presence or absence of a {glider} or other spaceship at a particular point at a particular time.  Such signals can be combined by the collision of gliders to form logic operations such as AND, OR, and NOT gates. Signals can be duplicated using {glider duplicator}s or other {fanout} devices, and can be used up by causing {perturbation}s on other parts of the Life object.
     Signals are used in {Herschel conduit} circuitry, {universal constructor}s, {macro-spaceship}s, and other computational patterns such as the {pi calculator} and {Osqrtlogt} patterns.

:signal elbow:  A {conduit} with  {signal} output 90 degrees from its input.  This term is commonly used only for signal {wire}s, particularly {2c/3} signals.  A {Snark} could reasonably be called a "glider elbow", but {glider reflector} is the standard term.  A signal elbow with a {recovery time} less than 20 ticks would enable a trivial proof that Conway's Life is {omniperiodic}.
     A near miss is the following elbow-like {converter} found by Dean Hickerson.  It successfully turns a 2c/3 signal by 90 degrees, but unfortunately changes it to a double-length signal in the process.  This means that further copies of the converter can not be appended (e.g., to make a closed loop).
        ........................*..*......
        ........................******....
        ..............................*.**
        ......................*****.*.*.**
        .....................*......*.*...
        .....................*****..*.*...
        ..................*.......*.**....
        ..................******..*.......
        ........................*.*.......
        ................******..*.**......
        ..........**...*......*.*.........
        .........*..*..*****..*.*.........
        ........*.***.......*.**..........
        ....**.*.*...*****..*.............
        .....*.*...*......*.*.............
        .....*.*..******..*.**............
        ...*.*.*.*......*.*...............
        ..*.**..*.****..*.*...............
        ..*...*.*.*...*.**................
        **.**.*.*...*.*...................
        .*.*..*.****.*.***................
        *..*.*.......*...*................
        .***..********....................
        ....*.*...........................
        ...**.*..*******..................
        ..*..**.*.......*.................
        ..**....*..******.................
        ........*.*.......................
        .......**.*..******...............
        ..........*.*......*..............
        ..........*.*..*****..............
        ...........**.*.......*...........
        ..............*..******...........
        ..............*.*.................
        .............**.*..******.........
        ................*.*......*.**.....
        ................*.*..*****.**.....
        .................**.*.............
        ....................*..******.....
        ....................*.*.....*.....
        ...................**.*..***......
        ......................*.*.....**..
        ......................*..*....**..
        .......................**.........
     Relatively small {composite} {MWSS} elbows can now be constructed, using Tanner Jacobi's 2015 discovery of a small {H-to-MWSS} component. For example, the {Orthogonoid} includes a constructor/reflector that reflects an MWSS stream by 180 degrees, but it can be trivially reconfigured to make a 90-degree MWSS elbow.

:Silver G-to-H:  A variant of the {Silver reflector} made by substituting an {Fx119} conduit for the final {NW31}, allowing a Herschel output as well as the beehive-annihilating reset glider.  It is still {Spartan}, and as long as the Fx119 is followed by a {dependent conduit}, it retains the faster 497-tick {recovery time}.

:Silver reflector:  A {stable} {glider reflector} found by Stephen Silver in November 1998, by substituting an {NW31} converter for the second {Fx77} conduit in the {Callahan G-to-H} found a few days previous.  The repeat time is 497 ticks:
        ........*.............*.......................................
        ......*.*...........***.......................................
        .......**..........*..........................................
        ...................**.........................................
        ....**........................................................
        .....*........................................................
        .....*.*......................................................
        ......**..........*...........................................
        .................*.*..........................................
        .................*.*..........................................
        ..................*....**.....................................
        ......**...............*.*....................................
        .....*.*.................*....................................
        .....*...................**...................................
        ....**........................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ...............**.............................................
        ...............**.............................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ...**.........................................................
        ....*.........................................................
        ....*.*.......................................................
        .....**.......................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ......**...............**.....................................
        ......**...............*.*....................................
        .........................*....................................
        .........................**...................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ..............................................................
        ...................*..........................................
        .................***..........................................
        ................*.............................................
        ................**...................**.......................
        ....................**................*.......................
        .....................*................*.*.....................
        ...................*...................**.....................
        ...................**.........................................
        ..............................................................
        ..............................................................
        ............................................................**
        ............................................................**
        ..............................................................
        ......................**......................................
        ...**.................**......................................
        ...**.........................................................
        ..............................................................
        ..............................................................
        ..**..........................................................
        ...*..........................................................
        ***............**.............................................
        *..............*..............................................
        ................***...........................................
        ..................*...........................................
        ..............................................................
        ..................................................**..........
        ..................................................**..........

:Silver's p5: (p5)  The following oscillator found by Stephen Silver in February 2000:
        **.........
        *..........
        .*..*......
        ...**......
        ...*...*.**
        ..*....**.*
        ..**.......
     As this has no {spark}, it appears useless.  Nonetheless, in March 2000, David Eppstein found a way to use it to reduce the size of Noam Elkies' p5 {reflector}.

:Simkin glider gun: (p120)  A {Herschel}-based glider gun discovered by Michael Simkin in April 2015.  It consists of a Herschel running through two {B60} conduits. In terms of its 36-cell minimum population, it is one of the smallest known guns, sharing the record with the {Gosper glider gun}. In the double-barreled form, as well as the {pseudo}-period, {snake}-stabilized form shown below, it is the absolute record holder.
        **.....**........................
        **.....**........................
        .................................
        ....**...........................
        ....**...........................
        .................................
        .................................
        .................................
        .................................
        ......................**.**......
        .....................*.....*.....
        .....................*......*..**
        .....................***...*...**
        ..........................*......
        .................................
        .................................
        .................................
        .................................
        ........................*.**.....
        ........................**.*.....

:single-arm:  A type of {universal constructor} using just one construction arm and {slow salvo} techniques to construct, usually, {Spartan} or near-Spartan circuitry.  Compare {two-arm}.

:single-channel:  A type of {universal constructor} discovered and developed by Simon Ekstrom and others starting in December 2015.  The initial {elbow operation} toolkit was near-minimal, with just one {push}, one {pull}, and one output glider of each colour (see {colour of a glider}).  Later searches produced a much larger and more efficient library.
     Single-channel {recipe}s consist of a {stream} of {glider}s on a single {lane} and aimed at a {construction elbow}, usually separated from each other by at least 90 {tick}s.  In spite of these strict limitations, single-channel recipes can be made to do surprising things.  For example, it is possible to build a {Snark} directly on the {construction lane} of an active construction arm, starting from a single {elbow} {block}.  This can allow the arm to reach efficiently around complex obstructions by bending itself through multiple {lossless elbow}s.  Known recipes can also remove an elbow when it is no longer needed, by controlled demolition of the Snark.
     As of June 2018, almost all single-channel recipes are made up of {singleton}s and {synchronized} pairs of gliders, but no synchronized triplets or larger groups.  This is not an inherent limitation of single-channel construction, but rather a limitation in the {search program} used to find currently known single-channel {toolkit}s.
     A useful byproduct of this limitation is that single-channel recipes can be trivially adjusted to allow them to safely cross perpendicular data streams, including other single-channel recipes (or earlier parts of the same recipe).  To avoid collisions with a crossing stream, each singleton glider or glider pair can safely be delayed by any even number of ticks, or technically by any multiple of the period of the current {intermediate target}.  The final result of the construction will not be affected.

:single-channel Demonoid:  See {Demonoid}.

:single-lane:  = {single-channel}.

:singleton:  In {single-channel} {recipe}s, a glider that is not {synchronized} with a neighboring glider in its {stream}.  Compare {glider pair}.

:singular flip flop: (p2)  Found by Robert Wainwright, July 1972.
        ..*...
        ..*.*.
        *....*
        ******
        ......
        ..**..
        ..**..

:sinking ship:  = {canoe}

:Sir Robin: ((2,1)c/6, p6)  The first elementary {knightship} in Conway's Game of Life, found by Adam P. Goucher on March 6, 2018, based on a partial by Tomas Rokicki.
        ....**.........................
        ....*..*.......................
        ....*...*......................
        ......***......................
        ..**......****.................
        ..*.**....****.................
        .*....*......***...............
        ..****....**...*...............
        *.........**...................
        .*...*.........................
        ......***..**..*...............
        ..**.......*....*..............
        .............*.**..............
        ..........**......*............
        ...........**.***.*............
        ..........**...*..*............
        ..........*.*..**..............
        ..........*..*.*.*.............
        ..........***......*...........
        ...........*.*.*...*...........
        ..............**.*.*...........
        ...........*......***..........
        ...............................
        ...........*.........*.........
        ...........*...*......*........
        ............*.....*****........
        ............***................
        ................**.............
        .............***..*............
        ...........*.***.*.............
        ..........*...*..*.............
        ...........*....**.***.........
        .............****.*....**......
        .............*.****....**......
        ...................*...........
        ....................*..**......
        ....................**.........
        .....................*****.....
        .........................**....
        ...................***......*..
        ....................*.*...*.*..
        ...................*...*...*...
        ...................*...**......
        ..................*......*.***.
        ...................**...*...**.
        ....................****..*..*.
        ......................**...*...
        .....................*.........
        .....................**.*......
        ....................*..........
        ...................*****.......
        ...................*....*......
        ..................***.***......
        ..................*.*****......
        ..................*............
        ....................*..........
        ................*....****......
        ....................****.**....
        .................***....*......
        ........................*.*....
        ............................*..
        ........................*..**..
        .........................***...
        ......................**.......
        .....................***.....*.
        ........................**..*.*
        .....................*..***.*.*
        ......................**.*..*..
        ........................*.*..**
        ..........................**...
        ......................***....*.
        ......................***....*.
        .......................**...***
        ........................**.**..
        .........................**....
        .........................*.....
        ...............................
        ........................**.....
        ..........................*....

:six Ls: (p3)  This is a compact form of {loading dock}.
        ...*...
        .***..*
        *...***
        ***....
        ....***
        ***...*
        *..***.
        ...*...

:sixty-nine: (p4)  Found by Robert Wainwright, October 1978.
        .........*...........
        ........*.*..........
        .....................
        ......*...**.........
        .....*.....*.........
        ......*.*............
        ........**......*....
        ................*....
        ..*.....**....***....
        ..*...........**.....
        ***.......**..**..***
        **......*.**....***..
        **..***.*.*.....***..
        ..***................
        ..***......*.........
        ..........*.*........
        .....................
        ........*...**.......
        .......*.....*.......
        ........*.*..........
        ..........**.........

:skewed quad: (p2)
        .**....
        .*...**
        ..*.*.*
        .......
        *.*.*..
        **...*.
        ....**.

:skewed traffic light: (p3)  Found by Robert Wainwright, August 1989.
        .............**.........
        ............*..*........
        .............*.*........
        .........**...*.........
        ..........*.**..........
        ............*...........
        ............*...........
        ........................
        **........***......*....
        ****.*........*...**....
        *.*..***.*....*.........
        .........*....*.***..*.*
        ....**...*........*.****
        ....*......***........**
        ........................
        ...........*............
        ...........*............
        ..........**.*..........
        .........*...**.........
        ........*.*.............
        ........*..*............
        .........**.............

:sL:  Abbreviation for {still life}, used most often in rough measurements of the complexity of a {Spartan} constellation.

:slide gun:  A {gun} which fires sideways from an extending arm.  The arm consists of streams of {spaceship}s which are pushing a pattern away from the body of the gun and releasing an output spaceship every time they do so.  Each output spaceship therefore travels along a different path.
     Dieter Leithner constructed the first slide gun in July 1994 (although he used the term "side shooting gun").  The following pattern shows the key reaction of this slide gun.  The three gliders shown will push the block one cell diagonally, thereby extending the length of the arm by one cell, and at the same time they release an output glider sideways.  (In 1999, Jason Summers constructed slide guns using other reactions.)
        ..............**.
        ..............**.
        ........***......
        ..........*......
        .........*.....**
        ..............*.*
        ................*
        .................
        .................
        .................
        .................
        .................
        .................
        .................
        .................
        .................
        .................
        .*...............
        .**..............
        *.*..............

:sliding block memory:  A memory register whose value is stored as the position of a {block}.  The block can be moved by means of {glider} collisions.  See {block pusher} for an example.
     In Conway's original formulation (as part of his proof of the existence of a {universal computer} in Life) two gliders were used to pull the block inwards by three diagonal spaces, as shown below, and thirty gliders were used to push it out by the same amount.
        **..........
        **..........
        ............
        ............
        ............
        .........***
        ***......*..
        *.........*.
        .*..........
     Dean Hickerson later greatly improved on this, finding a way to pull a block inwards by one diagonal space using 2 gliders, and push it out the same distance using 3 gliders. In order for the memory to be of any use there also has to be a way to read the value held.  It suffices to be able to check whether the value is zero (as Conway did), or to be able to detect the transition from one to zero (as Hickerson did).
     Dean Hickerson's sliding block memory is used in Paul Chapman's {URM}, and the key salvos from it are used in several other complex constructions, such as David Bell's {Collatz 5N+1 simulator} and Adam P. Goucher's {pi calculator} and {Spartan} {universal computer}-constructor.

:slmake:  A {search program} published by Adam P. Goucher in May 2017.  It accepts as input a {constellation} of sufficiently widely separated {still life}s, and produces a {glider} {stream} that will perform a complete {slow glider construction} of that constellation, starting from a single block.
     One of slmake's primary uses is to make {self-constructing} patterns much easier to design and build.  It is capable of finding {recipe}s not only for {Spartan} {stable} {circuit}ry, but also for other useful non-Spartan circuits such as {Snark}s, {syringe}s, and {H-to-MWSS} {converter}s, provided that they are separated from other nearby objects by a sufficient amount of empty space.

:slow:  See {slow glider construction}.

:slow elbow:  A movable {construction elbow} that is controlled by a {slow salvo}, which most likely comes from a previous elbow in a multi-elbow {construction arm}.  Unlike a standard elbow which is generally fixed on a single {construction lane} or at least within a narrow range, a slow elbow can move freely in two dimensions as long as there is room for it.  Each slow elbow added to a construction arm results in an exponential increase in the cost (in gliders) of the final construction.  Compare {lossless elbow}.

:slow glider construction:  Construction an object by a "slow salvo" of {glider}s all coming from the same direction, in such a way that timing of the gliders does not matter as long as they are not too close behind one another.  This type of construction requires an initial seed object, such as a {block}, which is modified by each glider in turn until the desired object is produced.
     In May 1997, Nick Gotts produced a slow glider construction of a block-laying switch engine from a block, using a slow salvo of 53 gliders.  Constructions like this are important in the study of {sparse Life}, as they will occur naturally as gliders created in the first few generations collide with {blonk}s and other debris.
     Slow glider constructions are also useful in some designs for {universal constructor}s.  However, in this case the above definition is usually too restrictive, and it is desirable to allow constructions in which some gliders in the salvo are required to have a particular timing modulo 2 (a "p2 slow salvo").  This gives much greater flexibility, as {blinker}s can now be freely used in the intermediate construction steps.  The {Snarkmaker} is a very large p2 slow salvo.  A much smaller example is the following {edgy} construction of an {eater1} starting from a block.
        **..***...............................................
        **..*.................................................
        .....*................................................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        ................***...................................
        ................*.....................................
        .................*....................................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        .......................***............................
        .......................*..............................
        ........................*.............................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        ......................................................
        ..............................*.......................
        ........................*....**.......................
        .......................**....*.*......................
        .......................*.*............................
        ......................................................
        ......................................................
        ..........................*...........................
        .........................**...........................
        .........................*.*..........................
        ......................................................
        .............................***....................**
        .............................*.....................**.
        ..............................*......................*    
     Adam P. Goucher's {slmake} {search program}, made available in May 2017, makes it much easier to find a slow glider construction for a wide variety of {stable} {circuit}ry.

:slow salvo:  See {slow glider construction}.

:small fish:  = {LWSS}

:small lake: (p1)  A 20-cell {still life}, but technically not actually a {lake} because it is not constructed entirely out of {domino}es.
        ....*....
        ...*.*...
        ...*.*...
        .**...**.
        *.......*
        .**...**.
        ...*.*...
        ...*.*...
        ....*....

:smiley: (p8)  Found by Achim Flammenkamp in July 1994 and named by Alan Hensel.
        **.*.**
        ...*...
        *.....*
        .*****.
        .......
        .......
        ***.***

:SMM breeder:  See {breeder}.

:smoke:  Debris that is fairly long-lived but eventually dies completely.  Basically, a large {spark}.  This term is used especially when talking about the output from a {smoking ship}.  Some {Herschel conduit}s such as {Fx119} also create large amounts of smoke.

:smoking ship:  A {spaceship} which produces {smoke}.  If the smoke extends past the edge of the rest of the spaceship, then it can be used to perturb other objects as the spaceship passes by.  Running gliders into the smoke is often a good way to turn or duplicate them, or convert them into other objects.  Sometimes the smoke from a smoking ship may itself be perturbed by accompanying spaceships in order to form a {puffer}.  A simple example of a smoking ship is the {Schick engine}.

:snacker: (p9)  Found by Mark Niemiec in 1972.  This is a {pentadecathlon} with stabilizers which force it into a lower period.
        **................**
        .*................*.
        .*.*............*.*.
        ..**............**..
        .......*....*.......
        .....**.****.**.....
        .......*....*.......
        ..**............**..
        .*.*............*.*.
        .*................*.
        **................**
   The stabilizers make the {domino} spark largely inaccessible, but the snacker is {extensible}, as shown in the next diagram, and so a more accessible p9 domino spark can be obtained.  In April 1998 Dean Hickerson found an alternative stabilizer that is less obtrusive than the original one, and this is also shown in this diagram.
        **................................
        .*................................
        .*.*.........................**...
        ..**.......................*..*...
        .......*....*..............***....
        .....**.****.**...*....*......***.
        .......*....*...**.****.**...*...*
        ..**..............*....*......***.
        .*.*.......................***....
        .*.........................*..*...
        **...........................**...
   An end can also be stabilized by killer {candlefrobra}s.

:snail: (c/5 orthogonally, p5)  The first known {c/5 spaceship}, discovered by Tim Coe in January 1996.  For some time it was the slowest known orthogonal spaceship.
        .*....................................
        .*....................................
        *.....................................
        .***.................***...***........
        .**.*.........*...*.*......***........
        ..*...........**.*.......*....****....
        ......*......*...*.*...**.*.....**....
        ...*..*.***...**.........*........**.*
        ...**.*.....*.....*.................*.
        .........*.*******....................
        ......................................
        .........*.*******....................
        ...**.*.....*.....*.................*.
        ...*..*.***...**.........*........**.*
        ......*......*...*.*...**.*.....**....
        ..*...........**.*.......*....****....
        .**.*.........*...*.*......***........
        .***.................***...***........
        *.....................................
        .*....................................
        .*....................................

:snake: (p1)
        **.*
        *.**

:snake bit:  An alternative name for a {boat-bit}.  Not a very sensible name, because various other things can be used instead of a snake.  A snake, or alternatively an {aircraft carrier}, is the smallest object that can consume a glider {stream} by effectively acting as an {eater} for every two incoming gliders.  The one-cell reduction from the smallest real eater, the seven-cell {eater1}, has been important when trying to construct recent {sawtooth}s where the {population} must be minimized.

:snake bridge snake: (p1)
        ....**
        ....*.
        .....*
        ....**
        **.*..
        *.**..

:snake dance: (p3)  Found by Robert Wainwright, May 1972.
        ...**.*..
        ...*.**..
        **.*.....
        .*..*.***
        *..*.*..*
        ***.*..*.
        .....*.**
        ..**.*...
        ..*.**...

:snake pit:  This term has been used for two different {oscillator}s: the p2 snake pit (essentially the same as {fore and back})
        *.**.**
        **.*.*.
        ......*
        ***.***
        *......
        .*.*.**
        **.**.*
   and the p3 snake pit.
        .....**....
        ....*..*...
        ....*.**...
        .**.*......
        *.*.*.****.
        *.........*
        .****.*.*.*
        ......*.**.
        ...**.*....
        ...*..*....
        ....**.....

:snake siamese snake: (p1)
        **.**.*
        *.**.**

:Snark:  A small stable 90-degree glider reflector with a repeat time of 43 ticks, discovered by Mike Playle on 25 April 2013 using a search utility he wrote called {Bellman}. Compare {boojum reflector}.  Four common Snark variants are shown below:  Playle's original at the top, and variants by Heinrich Koenig, Simon Ekstrom, and Shannon Omick to the left, bottom, and right, respectively.  As of June 2018, only Playle's variant has a known {slow glider construction} {recipe} for all orientations.
        .............................**....................
        ............................*.*....................
        ......................**....*......................
        ....................*..*..**.****..................
        ....................**.*.*.*.*..*..................
        .......................*.*.*.*.....................
        .......................*.*.**......................
        ........................*..........................
        ...................................................
        .....................................**............
        ............................**.......*.............
        ............................**.....*.*.............
        .........*.........................**..............
        .........***.......................................
        ............*........*.............................
        ...........**.......*..............................
        ....................***............................
        ...................................................
        ...**..............................................
        ...*.....................**........................
        **.*......................*........................
        *..***....**...........***.........................
        .**...*...**...........*......................*....
        ...****.....................**..............*****..
        ...*...............**........*.............*.....*.
        ....***............*.*.......*.*............***..*.
        .......*.............*........**...............*.**
        ..*****..............**.....................****..*
        .*..*......................*...........**...*...**.
        .**......................***...........**....***...
        ........................*......................*...
        ........................**.....................*.**
        ..............................................**.**
        ...................................................
        ...................................................
        ......................................**...........
        ......................................*............
        .......................................***.........
        ..............**.........................*.........
        .............*.*.....**............................
        .............*.......**............................
        ............**.....................................
        ...................................................
        ..........................*........................
        ................**....**.*.*.......................
        ...............*..*..*.*.*.*.......................
        ................**...*.*.*.**......................
        ..................****.**..*.......................
        ..................*...*....*.......................
        ...................*..*.***........................
        ....................*.*.*..........................
        .....................*.............................

:Snarkmaker:  A {single-channel} {stream} of {glider}s that, when aimed to collide with an {elbow} {block} in a specific location, will perform a {slow glider construction} of a {Snark}, directly on the same {lane} as the incoming gliders.  This allows a {construction arm} to add one or more {lossless elbow}s, so that it can bend around multiple corners without an exponential increase in construction cost.
     The Snarkmaker recipe used in the first single-channel {Demonoid}, {Orthogonoid}, and {spiral growth} patterns contains 2,254 gliders.  This could be considerably reduced with a customized {search program}.

:SNG:  = {second natural glider}.

:SODGame:  = {Seeds of Destruction Game}

:sombrero:  One half of {sombreros} or {siesta}.

:sombreros: (p6)  Found by Dave Buckingham in 1972.  If the two halves are moved three spaces closer to one another then the period drops to 4, and the result is just a less compact form of {Achim's p4}. Compare also {siesta}.
        ...**........**...
        ...*.*......*.*...
        .....*......*.....
        ...*.**....**.*...
        .***..........***.
        *...*.*....*.*...*
        .***..........***.
        ...*.**....**.*...
        .....*......*.....
        ...*.*......*.*...
        ...**........**...

:soup:  A random initial pattern, either contained within a small area, or alternatively filling the whole Life universe.
     Finite soups probably have behaviors very different than infinite soups, but this is obviously unknown.  Infinite soups may remain chaotic indefinitely since any reaction, no matter how rare, is bound to happen somewhere.
     Soups can have an average density, with results varying based on that.  See {sparse Life} for a discussion of what can happen at a low density.
     Finite soups for sizes such as 16x16 (asymmetric) have been examined by the billions by scripts such as {apgsearch} to find interesting results.  Many new {oscillator}s and {synthesis} {recipe}s have been discovered, as well as previously known rare patterns such as {stabilized switch engine}s.  In addition, soups are used to generate statistical {census} data, and to decide whether specific objects can be considered {natural}.
     Soups can be fully random, or they can be forced to be {symmetric}.  The results for these two types of soups can differ since symmetric soups tend to create large symmetrical objects at a much higher rate.  Shown below is an unusual mirror-symmetric soup that produces a {pufferfish} and nothing else.
        ****..**.***.*...*.***.**..****
        .*.*.**.*.............*.**.*.*.
        ..***..*.*.*.......*.*.*..***..
        *.**.***.*..*.....*..*.***.**.*
        .****.*...**.*****.**...*.****.
        .....**...**.*.*.*.**...**.....
        ..***...**...*...*...**...***..
        *..*..*.**...**.**...**.*..*..*
        **.*..*...*.........*...*..*.**
        *.*.*...****..***..****...*.*.*
        *.***.**..**...*...**..**.***.*
        ..*.....**...*...*...**.....*..
        *****.*.***..*...*..***.*.*****
        .*....*....*..***..*....*....*.
        .**.*...***************...*.**.
        ****.***......*.*......***.****

:space dust:  A part of a {spaceship} or {oscillator} which looks like a random mix of ON and OFF cells.  It is usually very difficult to find a {glider synthesis} for an object that consists wholly or partly of space dust.  As examples, the {295P5H1V1}, {fly}, and {seal} spaceships contain large amounts of space dust.

:spacefiller:  Any pattern that grows at a quadratic rate by filling space with an {agar}.  The first example was found in September 1993 by Hartmut Holzwart, following a suggestion by Alan Hensel.  The diagram below shows a smaller spacefiller found by Tim Coe.  See also {Max}.  Spacefillers can be considered as {breeder}s (more precisely, MMS breeders), but they are very different from ordinary breeders. The word "spacefiller" was suggested by Harold McIntosh and soon became the accepted term.
        ..................*........
        .................***.......
        ............***....**......
        ...........*..***..*.**....
        ..........*...*.*..*.*.....
        ..........*....*.*.*.*.**..
        ............*....*.*...**..
        ****.....*.*....*...*.***..
        *...**.*.***.**.........**.
        *.....**.....*.............
        .*..**.*..*..*.**..........
        .......*.*.*.*.*.*.....****
        .*..**.*..*..*..**.*.**...*
        *.....**...*.*.*...**.....*
        *...**.*.**..*..*..*.**..*.
        ****.....*.*.*.*.*.*.......
        ..........**.*..*..*.**..*.
        .............*.....**.....*
        .**.........**.***.*.**...*
        ..***.*...*....*.*.....****
        ..**...*.*....*............
        ..**.*.*.*.*....*..........
        .....*.*..*.*...*..........
        ....**.*..***..*...........
        ......**....***............
        .......***.................
        ........*..................

:space nonfiller:  Any pattern that expands indefinitely to affect every cell in the Life plane, but leaves an expanding region of {vacuum} at its center.  Compare {spacefiller}; see also {antstretcher}.  The first nonfiller was discovered by Jason Summers on 14 April 1999:
        ...................***...............
        ..................*..*...............
        ............***......*....***........
        ............*..*.*...*....*..*.......
        ............*..*.*...*....*..*.......
        ..........*..........*..*.*.***......
        ..........**..**..*.*....*.....*.....
        ........*................**..***.....
        ........***.*.**..........*......*...
        ......*........*.........*.*...***...
        ......***.....*..........*........*..
        ...*.*.........................*.***.
        ..*****.*..........................*.
        .**......*.....................*****.
        **....**..................*.*........
        .*.*...*..*...............*..*...*.*.
        ........*.*..................**....**
        .*****.....................*......**.
        .*..........................*.*****..
        .***.*.........................*.*...
        ..*........*..........*.....***......
        ...***...*.*.........*........*......
        ...*......*..........**.*.***........
        .....***..**................*........
        .....*.....*....*.*..**..**..........
        ......***.*.*..*..........*..........
        .......*..*....*...*.*..*............
        .......*..*....*...*.*..*............
        ........***....*......***............
        ...............*..*..................
        ...............***...................

:space rake:  The following p20 forwards glider {rake}, which was the first known rake.  It consists of an {ecologist} with a {LWSS} added to turn the dying debris into {glider}s.
        ...........**.....****
        .........**.**...*...*
        .........****........*
        ..........**.....*..*.
        ......................
        ........*.............
        .......**........**...
        ......*.........*..*..
        .......*****....*..*..
        ........****...**.**..
        ...........*....**....
        ......................
        ......................
        ......................
        ..................****
        *..*.............*...*
        ....*................*
        *...*............*..*.
        .****.................

:spaceship:  Any finite pattern that reappears (without additions or losses) after a number of generations and displaced by a non-zero amount.  By far the most {natural} spaceships are the {glider}, {LWSS}, {MWSS} and {HWSS}, followed by the {Coe ship} which has also evolved multiple times from random asymmetric {soup} starting conditions.  See also the entries on individual spaceship speeds: {c/2 spaceship}, {c/3 spaceship}, {c/4 spaceship}, {c/5 spaceship}, {c/6 spaceship}, {c/7 spaceship}, {c/10 spaceship}, {c/12 spaceship}, {2c/5 spaceship},  {2c/7 spaceship}, {3c/7 spaceship}, {(2,1)c/6 spaceship}, and {17c/45 spaceship}.
     It is known that there exist spaceships travelling in all rational directions and at arbitrarily slow speeds (see {universal constructor}).  Before 1989, however, the only known examples travelled at c/4 diagonally (gliders) or c/2 orthogonally (everything else).
     In 1989 Dean Hickerson started to use automated searches to look for new {elementary} spaceships, and had considerable success.  Other people have continued these searches using tools such as {lifesrc} and {gfind}, and as a result we now have a great variety of elementary spaceships travelling at sixteen different velocities.  The following table details the discovery of elementary spaceships with new velocities as of June 2018.
        -------------------------------------------------------------------
        Speed    Direction  First Discovery     Discoverer             Date
        -------------------------------------------------------------------
        c/4      diagonal   {glider}            Richard Guy            1970
        c/2      orthogonal {LWSS}              John Conway            1970
        c/3      orthogonal {25P3H1V0.1}        Dean Hickerson     Aug 1989
        c/4      orthogonal {119P4H1V0}         Dean Hickerson     Dec 1989
        c/12     diagonal   {Cordership}        Dean Hickerson     Apr 1991
        2c/5     orthogonal {44P5H2V0}          Dean Hickerson     Jul 1991
        c/5      orthogonal {snail}             Tim Coe            Jan 1996
        2c/7     orthogonal {weekender}         David Eppstein     Jan 2000
        c/6      orthogonal {dragon}            Paul Tooke         Apr 2000
        c/5      diagonal   {295P5H1V1}         Jason Summers      Nov 2000
        c/6      diagonal   {seal}              Nicolay Beluchenko Sep 2005
        c/7      diagonal   {lobster}           Matthias Merzenich Aug 2011
        c/7      orthogonal {loafer}            Josh Ball          Feb 2013
        c/10     orthogonal {copperhead}        zdr                Mar 2016
        3c/7     orthogonal {spaghetti monster} Tim Coe            Jun 2016
        (2,1)c/6 oblique    {Sir Robin}         Adam P. Goucher    Mar 2018
        -------------------------------------------------------------------
     Several infinite families of adjustable-velocity {macro-spaceship}s have also been constructed, of which the first was Gabriel Nivasch's {Caterpillar} from December 2004.  The macro-spaceship with the widest range of possible speeds is Michael Simkin's {Caterloopillar} from April 2016; in theory it supports any rational orthogonal speed strictly less than c<4.  A somewhat similar design supporting any rational speed strictly less than c/2 has been shown to be feasible, but as of June 2018 no explicit examples have been constructed.
     A period p spaceship that displaces itself (m,n) during its period, where m>=n, is said to be of type (m,n)/p.  It was proved by Conway in 1970 that p>=2m+2n.  (This follows immediately from the easily-proved fact that a pattern cannot advance diagonally at a rate greater than one half diagonal step every other generation.)

:Spaceships in Conway's Life:  A series of articles posted by David Bell to the newsgroup comp.theory.cell-automata during the period August-October 1992 that described many of the new {spaceship}s found by himself, Dean Hickerson and Hartmut Holzwart.  Bell produced an addendum covering more recent developments in 1996.

:spaghetti monster:  The first {3c/7 spaceship}, found by Tim Coe in June 2016.  The spaceship travels orthogonally, has a minimum of 702 live cells and fits in a 27x137 bounding box.

:spark:  A pattern that dies.  The term is typically used to describe a collection of cells periodically thrown off by an {oscillator} or {spaceship}, but other dying patterns, particularly those consisting or only one or two cells (such as produced by certain glider collisions, for example), are also described as sparks.  For examples of small sparks see {unix} and {HWSS}.  Examples of much larger sparks are seen in {Schick engine} and {twin bees shuttle spark}.

:spark coil: (p2)  Found in 1971.
        **....**
        *.*..*.*
        ..*..*..
        *.*..*.*
        **....**

:sparker:  An {oscillator} or {spaceship} that produces {spark}s. These can be used to {perturb} other patterns without being themselves affected.

:sparking eater:  One of two {eater}s found in April 1997 and November 1998 by Dean Hickerson using his {dr} {search program}, shown below to the left and right respectively.  These both absorb {glider}s as a standard eater does, but also produce separated single-bit {spark}s at the upper right, which can be used to delete antiparallel gliders with different phases as shown.
        ..*.........**........*..........**.
        *.*........**.......*.*..........*.*
        .**..........*.......**..........*..
        ....**..**...............**..**.....
        .*...*..**............*...*..**.....
        .****.............**..****..........
        ..................*.................
        .**................*****............
        .**.....................*...........
        .....................***............
        .....................*..............
   The above mechanisms can be used to build {intermitting glider gun}s.  The left-hand eater produces a spark nine ticks after a glider impact, with the result that the period of the constituent guns can't be a multiple of 4.  The right-hand eater produces the same spark ten ticks after impact, which allows p4N guns to be used.
     The separation of the spark also allows this reaction to perform other {perturbation}s "around the corner" of some objects.  For example, it was used by Jason Summers in 2004 to cap the ends of a row of ten {AK47 reaction}s to form a much smaller period 94 glider gun than the original one.  (This is now made obsolete by the {AK94 gun}.)

:sparky:  A certain c/4 {tagalong}, shown here attached to the back of a {spaceship}.
        ..........*....................
        ..........*...............**...
        ......**.*.***..........**...*.
        *.**.**.**..*.*...**.****......
        *...**..*.**..***..*.**..**...*
        *.**....***.*.***......**..*...
        ........**.*...............*..*
        *.**....***.*.***......**..*...
        *...**..*.**..***..*.**..**...*
        *.**.**.**..*.*...**.****......
        ......**.*.***..........**...*.
        ..........*...............**...
        ..........*....................

:sparse Life:  This refers to the study of the evolution of a Life universe which starts off as a random {soup} of extremely low density.  Such a universe is dominated at an early stage by {block}s and {blinker}s (often referred to collectively as {blonk}s) in a ratio of about 2:1.  Much later it will be dominated by simple {infinite growth} patterns (presumably mostly {switch engine}s).  The long-term fate of a sparse Life universe is less certain.  It may possibly become dominated by self-reproducing patterns (see {universal constructor}), but it is not at all clear that there is any mechanism for these to deal with all the junk produced by switch engines.

:Spartan:  A pattern composed of subunits that can be easily constructed in any orientation, usually with a {slow salvo}. Generally this means that the pattern is a {constellation} of Spartan still lifes:  {block}, {tub}, {boat}, {hive}, {ship}, {loaf}, {eater1}, or {pond}.  Other small objects may sometimes be counted as Spartan, including period-2 oscillators - mainly {blinker}s, but also {beacon}s or {toad}s, which may occur as {intermediate target}s in slow salvo {recipe}s.  Most {self-constructing} patterns are Spartan or mostly Spartan, to simplify the process of self-construction.

:speed booster:  Any mechanism which allows a {signal} (indicated by the presence or absence of a spaceship) to move faster than the spaceship could travel through empty space.  The original speed booster is based on p30 {technology}, and is shown below:
        ....................*........................
        .....................*.......................
        ...................***.......................
        .............................................
        ...........................*.*...............
        .........................*...*...............
        .................*.......*...................
        ................****....*....*........**.....
        ...............**.*.*....*............**.....
        ....**........***.*..*...*...*...............
        ....**.........**.*.*......*.*...............
        ................****.........................
        .................*...........................
        ..........................***................
        ..........................*.*...**...........
        .........................**.....*..*.........
        ..................*.*.....*.........*......**
        ................*...*..**...........*......**
        .........**.....*..........*........*........
        .*.......**....*....*.......**..*..*.........
        ..*.............*.......*.*..*..**...........
        ***.............*...*.....***................
        ..................*.*........................
   Here the top glider is boosted by passing through two {inline inverter}s, emerging 5 cells further along than the unboosted glider at the left.
     The fastest speed boosters are the {telegraph} and {p1 telegraph}, which can transfer a orthogonal signal at the {speed of light}, although their bit rate is rather slow.
     Diagonal speed boosters have also been built using {2c/3 wire}s or other stable components.  See {stable pseudo-Heisenburp}.
     The {star gate} seems like it can transfer a signal faster than the {speed of light}.  The illusion is explained in {Fast Forward Force Field}.

:speed of light:  The greatest speed at which any effect can propagate; in {Life}, a speed of one cell per {generation}.  Usually denoted c.

:S-pentomino:  Conway's name for the following {pentomino}, which rapidly dies.
        ..**
        ***.

:spider: (c/5 orthogonally, p5)  This is the smallest known c/5 {spaceship}, and was found by David Bell in April 1997.  Its side {spark}s have proved very useful in constructing c/5 {puffer}s, including {rake}s.  See also {PPS}.
        ......*...***.....***...*......
        ...**.*****.**...**.*****.**...
        .*.**.*.....*.*.*.*.....*.**.*.
        *...*.*...*****.*****...*.*...*
        ....***.....**...**.....***....
        .*..*.***.............***.*..*.
        ...*.......................*...

:spiral: (p1)  Found by Robert Wainwright in 1971.
        **....*
        .*..***
        .*.*...
        ..*.*..
        ...*.*.
        ***..*.
        *....**

:spiral growth:  A {self-constructing} pattern built by Dave Greene in August 2014 that uses four {universal constructor}s (UCs) arranged in a diamond to build four more UCs in a slightly larger diamond.  This was the first B3/S23 pattern that exhibited spiral growth.  Much smaller versions have now been constructed using the {single-channel} construction toolkit.

:splitter:  A {signal} {converter} that accepts a single input signal and produces two or more output signals, usually of the same type as the input.  An older term for this is {fanout}, or "fanout device".
     A sub-category is the {one-time} splitter, which is not technically a converter because it can only be used once.  One-time splitters are usually small {constellation}s that produce two or more {clean} gliders when struck by a single glider.  In other words, they are multi-glider {seed}s.  These are important for constructing self-destruct circuitry in {self-constructing} spaceships.
     The following combination, a {syringe} attached to an SE7T14 {converter} combined with an {NW31} converter, is one of the smallest known glider splitters as of June 2018.  Another small splitter with a 90-degree {colour-changing} output is shown under {reflector}.
        ..........**...........*......**....................
        ..........**..........*.*....*..*...................
        ......................*.*...*.***...*...............
        .....................**.**.*.*......***.............
        .........................*.*...**......*............
        .....................**.*..****.*.....**............
        .....................**.*.*...*.....................
        .........................*.*...*....................
        ..........................*.*...*...................
        ...........................*...**...................
        ....................................................
        ....................................................
        ....................................................
        ..................**................................
        ..................**................................
        ...**...............................................
        ..*..*..............................................
        .*.**...............................................
        .*................................................**
        **................................................**
        ...............**...................................
        ...............*....................................
        ................***.................................
        ..................*..........**.....................
        ............................*.*.....................
        ............................*.......................
        ...........................**.......................
        ***.................................................
        ..*.................................................
        .*..................................................

:SPPS: (c/5 orthogonally, p30)  The symmetric {PPS}.  The original PPS found by David Bell in May 1998.  Compare {APPS}.

:sqrtgun:  Any glider-emitting pattern which emits its nth glider at a time asymptotically proportional to n^2.  The first examples were constructed by Dean Hickerson around 1991.  See also {quadratic filter}, {exponential filter}, {recursive filter}.

:squaredance:  The p2 {agar} formed by tiling the plane with the following pattern.  Found by Don Woods in 1971.
        **......
        ....**..
        ..*....*
        ..*....*
        ....**..
        **......
        ...*..*.
        ...*..*.

:squirter:  = {pipsquirter}

:S-spiral:  = {big S}

:stabilized switch engine:  A single {switch engine} which survives indefinitely by interacting with the appropriate {exhaust} such that it prevents the engine from ever being destroyed.
     The only known types of stabilized switch engines were found by Charles Corderman soon after he discovered the switch engine itself.  There is a p288 block-laying type (the more common of the two) and the p384 glider-producing type.  These two puffers are the most {natural} infinite growth patterns in Life.  As of June 2018 they are the basis for every infinite growth pattern ever seen to occur from a random asymmetric {soup}, even after trillions of {census} results by {apgsearch} and similar projects.
     Patterns giving rise to block-laying switch engines can be seen under {infinite growth}, and one giving rise to a glider-producing switch engine is shown under {time bomb}.
     Here is the block-laying type showing its distinctive zig-zag trail of blocks.
        ..*.........................................................
        .*.*........................................................
        ............................................................
        .*..*.......................................................
        ...**.......................................................
        ....*.......................................................
        ..................**........................................
        ..................**........................................
        ............................................................
        ............................................................
        .**.........................................................
        ...*........................................................
        ..**........................................................
        .***...............*........................................
        .**................**.....**................................
        ***.*..............**.....**................................
        .*...*..........**..........................................
        ...*..*..........*..........................................
        ...***............*.........................................
        ....**........**............................................
        ..............**............................................
        ............................................................
        ..................................**........................
        ..................................**........................
        ............................................................
        ............................................................
        ......**....................................................
        ......**................**..................................
        ........................**..................................
        ............................................................
        ..........................................**................
        ....................**....................**................
        ....................**......................................
        ............................................................
        ..............**............................................
        ..............**............................................
        .......................................**...................
        .......................................**...................
        ............................................................
        ............................................................
        ...................................**.......................
        ...................................**.......................
        ............................................................
        ............................................................
        ............................................................
        ............................................................
        ..........................................................**
        ..........................................................**
        ............................................................
        ............................................................
        ..............................**............................
        ..............................**................**..........
        ................................................**..........
        ............................................................
        ............................................................
        ............................................**..............
        ............................................**..............
        ............................................................
        ......................................**....................
        ......................................**....................

:stable:  A pattern is said to be stable if it is a {parent} of itself.  Stable objects are oscillators with period 1 (p1), and are generally called {still life}s.

:stable pseudo-Heisenburp:  A multi-stage {converter} constructed by Dave Greene in January 2007, using a complex recipe found by Noam Elkies to insert a signal into a {2c/3 wire}.  The wire's high transmission speed allows a {signal} from a {highway robber} to catch up to a {salvo} of {glider}s.  Ultimately the mechanism restores the key glider, which was destroyed by the highway robber in the first stage of the converter, to its exact original position in the salvo.
     Much smaller stable pseudo-Heisenburp devices have since been designed that use simple 0-degree glider {seed} {constellation}s instead of a 2c/3 wire.
     These patterns are labeled "pseudo-Heisenburp", because a true {Heisenburp device} does not even temporarily damage or affect a passing glider, yet can still produce an output {signal} in response.  However, it is impossible to construct a {stable} device that can accomplish this for gliders.  True stable Heisenburp devices are possible with many other types of {spaceship}s, but not with gliders which have no usable side {spark}s to initiate an output signal.

:staged recovery:  A type of signal-processing {circuit} where the initial reaction between {catalyst}s an incoming signal results in an imperfect recovery.  A catalyst is damaged, destroyed completely as in a {bait} reaction, or one or more objects are left behind that must be cleaned up before the circuit can be reused.  In any of these three cases, output signals from the circuit must be used to complete the cleanup.  In theory the cleanup process might itself be {dirty}, requiring additional cleanup stages.  In rare cases this might theoretically allow the construction of special-purpose circuits with a lower {recovery time} than would otherwise be possible, but in practice this kind of situation does not commonly arise.
     An example is the record-breaking (at the time) 487-tick reflector constructed by Adam P. Goucher on 12 April 2009.  487 ticks was a slight improvement over the repeat time of the {Silver reflector}.  The reflector features a standard {Herschel receiver}, with the extra {beehive} deleted by an internal block-consuming glider reflector found by Dieter Leithner many years before.  Finally, the internal reflector is repaired by the usual ungainly Herschel plumbing attached to the G-to-H's output, which delivers a glider to a [[glider to block]] converter.
     The internal glider reflector is not actually fully recovered before a second p487 signal enters the full reflector.  However, it has been repaired by the time the internal reflector is actually needed again, so the cycle can be successfully repeated at p487 instead of p497.

:stairstep hexomino: (stabilizes at time 63)  The following {predecessor} of the {blockade}.
        ..**
        .**.
        **..

:stamp collection:  A collection of {oscillator}s (or perhaps other Life objects) in a single diagram, displaying the exhibits much like stamps in a stamp album.  The classic examples are by Dean Hickerson (see {http://conwaylife.com/ref/DRH/stamps.html}).
     Many stamp collections contain "fonts" made of single cells (which cleanly die) to annotate the objects or to draw boxes around them.  For example, here is a stamp collection which shows all the ways that two gliders can create a {loaf} or an {eater}:
        .*......*.*.....*....*.*.*...................*.
        ............................................*..
        .*.....*...*...*.*...*......................***
        ...............................................
        .*.....*...*..*...*..*.*.*.....................
        ...............................................
        .*.....*...*..*.*.*..*.........................
        ........................................**.....
        .*.*.*..*.*...*...*..*.................*.*.....
        .........................................*.....
        ...............................................
        ...............................................
        .............................................*.
        ............................................*..
        *.*.*....*....*.*.*..*.*.*..*.*.............***
        ................................*..............
        *.......*.*.....*....*......*..................
        ................................*..............
        *.*.*..*...*....*....*.*.*..*.*................
        ...............................................
        *......*.*.*....*....*......*..*...........*...
        ..........................................**...
        *.*.*..*...*....*....*.*.*..*...*.........*.*..
     Alternatively, stamp collections can use {LifeHistory} for their annotations, but this requires a more sophisticated Life program to handle.  Numbers, or more rarely letters, are sometimes constructed from stable components such as {block}s or {snake}s, but their readability is somewhat limited by placement constraints.

:standard spaceship:  A {glider}, {LWSS}, {MWSS} or {HWSS}.  These have all been known since 1970.

:star: (p3)  Found by Hartmut Holzwart, February 1993.
        .....*.....
        ....***....
        ..***.***..
        ..*.....*..
        .**.....**.
        **.......**
        .**.....**.
        ..*.....*..
        ..***.***..
        ....***....
        .....*.....

:star gate:  A device by Dieter Leithner (October 1996) for transporting a {LWSS} faster than the {speed of light}.  The key reaction is the {Fast Forward Force Field}.

:stator:  The cells of an {oscillator} that are always on.  Compare {rotor}.  (The stator is sometimes taken to include also some of those cells which are always off.)  The stator is divided into the {bushing} and the {casing}.
     By analogy, the cells of an {eater} that remain on even when the eater is eating are considered to constitute the stator of the eater. This is not always well-defined, because an eater can have more than one eating action.

:statorless:  A statorless {oscillator} is one in which no cell is permanently on - that is, the {stator} is empty,  or in other words the oscillator has the maximum possible volatility.  See the {volatility} entry for examples of this type of oscillator at different periods.  Statorless oscillators can be constructed for any sufficiently large period, using {universal constructor} technology. 

:statorless p5: (p5)  Found by Josh Ball, June 2016.  The first and only known {statorless} {period} 5 {oscillator}.
        *.............*
        .**.........**.
        *....**.**....*
        **.*.......*.**
        .*.*..*.*..*.*.
        ..*.*.....*.*..
        ..***.....***..
        ..***.....***..
        ..*.*.....*.*..
        .*.*..*.*..*.*.
        **.*.......*.**
        *....**.**....*
        .**.........**.
        *.............*

:step:  Another term for a {generation} or {tick}.  This term is particularly used in describing {conduit}s.  For example, a 64-step conduit is one through which the active object takes 64 generations to pass.

:stillater: (p3)  Found by Robert Wainwright, September 1985. This is one of only three essentially different p3 {oscillator}s with only three cells in the {rotor}.  The others are {1-2-3} and {cuphook}.
        ...*....
        ..*.*.**
        ..*.**.*
        **......
        .*.*.**.
        .*.*..*.
        ..*..*..
        ...**...

:still life:  Any {stable} pattern, usually assumed to be finite and nonempty.  For the purposes of enumerating still lifes this definition is, however, unsatisfactory because, for example, any pair of blocks would count as a still life, and there would therefore be an infinite number of 8-bit still lifes.
     For this reason a stricter definition is often used, counting a stable pattern as a {strict still life} only if its {island}s cannot be divided into two or more nonempty sets both of which are stable in their own right. If such a subdivision can be made, the pattern can be referred to as a {constellation}. If its cells form a single {cluster} it is also, more specifically, either a {pseudo still life} or a {quasi still life}.
     In rare cases above a certain size threshold, a pattern may be divisible into three or four stable nonempty subsets but not into two.  See the 32-bit {triple pseudo} (32 bits) and the 34-bit {quad pseudo} for examples.
     All still lifes up to 18 bits have been shown to be {glider constructible}.  It is an open question whether all still lifes can be incrementally constructed using glider collisions.  For a subset of small still lifes that have been found to be especially useful in {self-constructing} circuitry, see also {Spartan}.
     The smallest still life is the {block}.  Arbitrarily large still lifes are easy to construct, for example by extending a {canoe} or {barge}.  The maximum density of a large still life is 1/2, which can be achieved by an arbitrarily large patch of {zebra stripes} or {chicken wire}, among many other options.  See {density} for more precise limits.
        ...*..*..*..*..*..*...
        .********************.
        *....................*
        **********************
        ......................
        **********************
        *....................*
        .********************.
        ......................
        .********************.
        *....................*
        **********************
        ......................
        **********************
        *....................*
        .********************.
        ......................
        .********************.
        *....................*
        **********************
        ......................
        **********************
        *....................*
        .********************.
        ...*..*..*..*..*..*...

:still life tagalong:  A {tagalong} which takes the form of a {still life} in at least one {phase}.  An example is shown below.
        ..**...............
        .**.**.............
        ..****.............
        ...**..............
        ...................
        ...*****...........
        ..*******..........
        .**.*****..........
        ..**...............
        ...................
        ........*.*.....**.
        ......*....*...*..*
        ......**.....*.*..*
        .*..*..****.*...**.
        *.......**.........
        *...*..............
        ****...............

:stop and go:  A pattern by Dean Hickerson in which a period 46 {shuttle} converts a glider into a block on one oscillation, and then converts the block back into a glider on the next oscillation.  The glider is reflected back onto its own path, but with a delay.
        ........................................*.
        .......................................*..
        **..............**.........**..........***
        **...............**........**.............
        .............*****........................
        .............****.........................
        ..........................................
        .............****.........................
        .............*****........................
        **...............**.......................
        **..............**........................

:stop and restart:  A type of {signal} {circuit} where an input signal is converted into a stationary object, which is then re-activated by a secondary input signal.  This can be used either as a memory device storing one bit of information, or as a simple delay mechanism.  In the following January 2016 example by Martin Grant, a {ghost Herschel} marks the output signal location, and a "ghost {beehive}" marks the location of the intermediate still life.
        ........................................................*.
        .......................................................*..
        .......................................................***
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ............*.............................................
        ............***...........................................
        ...............*..........................................
        ..............**..........................................
        ........*.................................................
        .......*.*.......**.......................................
        .......*.*......*.*.......................................
        .....***.**.....**........................................
        ....*.....................................................
        .....***.**...............................................
        .......*.**...............................................
        ..........................................................
        ..........................................................
        ..........................................................
        **........................................................
        .*........................................................
        .*.*......................................................
        ..**......................................................
        ..........................................................
        ....................*.....................................
        ...................*.*....................................
        ...................*...................................*..
        ....................*................................***..
        ....................................**...............*....
        ..*.................................**...............*....
        ..*.*.....................................................
        ..***.....................................................
        ....*....................*................................
        ........................*.*...............................
        ........................**................................
        ...................**............**.......................
        ...................**............*........................
        ..................................*.......................
        .................................**.......................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..........................................................
        ..**..........**..........................................
        ...*..........*...........................................
        ***............***........................................
        *................*........................................
   The {eater1} in the lower left corner catches the restart glider if no input signal has come in to create the beehive.  This eater could be removed if it is useful to have both a "0" and a "1" output for a memory cell mechanism.
     The {catch and throw} {technology} in a {Caterpillar} is a somewhat similar idea.  See also {stop and go} and {reanimation}.

:stream:  A line of identical objects (usually {spaceship}s), each of which is moving in a direction parallel to the line, generally on the same {lane}.  In many uses the stream is periodic.  For example, the {new gun} produces a period 46 {glider} stream.  The stream produced by a {pseudo-random glider generator} can have a very high period.  Compare with {wave}.  See also {single-channel} for a common use of non-periodic {glider} streams.

:stretcher:  Any pattern that grows by stretching a {wick} or {agar}. See {wickstretcher} and {spacefiller}.

:strict still life:  A {still life} that is either a single connected {polyplet}, or is arranged such that a {stable} smaller pattern cannot be formed by removing one or more of its {island}s. For example, {beehive with tail} is a strict still life because it is connected, and {table on table} is a strict still life because neither of the {table}s are stable by themselves.  See also {triple pseudo}, {quad pseudo}.
     Still lifes have been enumerated by Conway (4-7 bits), Robert Wainwright (8-10 bits), Dave Buckingham (11-13 bits), Peter Raynham (14 bits), Mark Niemiec (15-24 bits), and Simon Ekstrom and Nathaniel Johnston (25-32 bits).  The resulting figures are shown below; see also {https://oeis.org/A019473}.  The most recent search by Nathaniel Johnston has also confirmed that the {triple pseudo} pattern found by Gabriel Nivasch is the only such still life with 32 bits or less.  It is therefore included in the pseudo still life count and not in the table below.
        --------------
        Bits    Number
        --------------
         4           2
         5           1
         6           5
         7           4
         8           9
         9          10
        10          25
        11          46
        12         121
        13         240
        14         619
        15        1353
        16        3286
        17        7773
        18       19044
        19       45759
        20      112243
        21      273188
        22      672172
        23     1646147
        24     4051711
        25     9971377
        26    24619307
        27    60823008
        28   150613157
        29   373188952
        30   926068847
        31  2299616637
        32  5716948683
        33 14223867298
        --------------
     As the number of bits increases, the strict still life count goes up exponentially by approximately O(2.46^n).  By comparison, the rate for pseudo still life}s is about O(2.56^n) while for {quasi still life}s it's around O(3.04^n).

:strict volatility:  A term suggested by Noam Elkies in August 1998 for the proportion of cells involved in a period n {oscillator} which themselves oscillate with period n.  For prime n this is the same as the ordinary {volatility}.  Periods with known strictly-volatile oscillators include 1, 2, 3, 5, 6, 8, 13, 15, 22, 30, 33, and 177.  Examples include {figure-8}, {Kok's galaxy}, {smiley}, and {pentadecathlon}.  A composite example is the following p22, found by Nicolay Beluchenko on 4 March 2009:
        ...........**...
        ..........*.*...
        ..*.....*....*..
        **.**..**.*.*...
        *.......*...*...
        .*.*............
        ................
        ..***.......*...
        ...*.......***..
        ................
        ............*.*.
        ...*...*.......*
        ...*.*.**..**.**
        ..*....*.....*..
        ...*.*..........
        ...**...........

:super beehive:  = {honeycomb}

:superfountain: (p4)  A p4 {sparker} which produces a 1-cell spark that is separated from the rest of the oscillator by two clear rows of cells.  The first superfountain was found by Noam Elkies in February 1998.  In January 2006 Nicolay Beluchenko found the much smaller one shown below.  See also {fountain}.
        ...........*...........
        .......................
        .......................
        .....*..*.....*..*.....
        ...**..*.*****.*..**...
        .....*...........*.....
        ...*.**.........**.*...
        .*.*...***...***...*.*.
        ***.*.............*.***
        ..........*.*..........
        ....***...*.*...***....
        ....*..*...*...*..*....
        ...****..*.*.*..****...
        ...**..***.*.***..**...
        ..*...*...*.*...*...*..
        ...*..*.*.*.*.*.*..*...
        ....*.*.**...**.*.*....
        .....*...........*.....

:superlinear growth:  Growth faster than any rate proportional to T, where T is the number of ticks that a pattern has been run.  This term usually applies to a pattern's population growth, rather than diametric growth or bounding-box growth.  For example, {breeder}s' and {spacefiller}s' population asymptotically grows faster than any linear-growth pattern.  It may also be used to describe the rate of increase in the number of subpatterns present in a pattern, such as when describing a {replicator}'s rate of reproduction.  Due to limits enforced by the {speed of light}, no pattern's population can grow at an asymptotic rate faster than {quadratic growth}.  See {switch-engine ping-pong} for the lowest-population superlinear growth pattern as of June 2018, along with a list of the record-holders.

:superstring:  An infinite orthogonal row of cells stabilized on one side so that it moves at the {speed of light}, often leaving debris behind.  The first examples were found in 1971 by Edward Fitzgerald and Robert Wainwright.  Superstrings were studied extensively by Peter Rott during 1992-1994, and he found examples with many different periods.  (But no odd periods.  In August 1998 Stephen Silver proved that odd-period superstrings are impossible.)
     Sometimes a finite section of a superstring can be made to run between two tracks ("waveguides").  This gives a {fuse} which can be made as wide as desired.  The first example was found by Tony Smithurst and uses {tub}s.  (This is shown below.  The superstring itself is p4 with a repeating section of width 9 producing one blinker per period and was one of those discovered in 1971.  With the track in place, however, the period is 8.  This track can also be used with a number of other superstrings.)  Shortly after seeing this example, in March 1997 Peter Rott found another superstring track consisting of {boat}s.  At present these are the only two waveguides known.  Both are destroyed by the superstring as it moves along.  It would be interesting to find one that remains intact.
     See {titanic toroidal traveler} for another example of a superstring.
        .**..........................................................
        *..*...*...*...*...*...*...*...*...*...*...*...*...*...*...*.
        ....*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*
        *..*...*...*...*...*...*...*...*...*...*...*...*...*...*...*.
        .***.........................................................
        ..**.........................................................
        ..**.........................................................
        ...*.........................................................
        ...*.........................................................
        ...*.........................................................
        ...*.........................................................
        ...*.........................................................
        ...*.........................................................
        ...*.........................................................
        ..**.........................................................
        ..**.........................................................
        .***.........................................................
        *..*...*...*...*...*...*...*...*...*...*...*...*...*...*...*.
        ....*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*
        *..*...*...*...*...*...*...*...*...*...*...*...*...*...*...*.
        .**..........................................................

:support:  Those parts of an object which are only present in order to keep the rest of the object (such an {engine} or an edge {spark}) working correctly.  These can be components of the object, or else accompanying objects used to {perturb} the object.  In many cases there is a wide variation of support possible for an engine.  The {arm}s in many {puffer}s are an example of support.

:surprise: (p3)  Found by Dave Buckingham, November 1972.
        ...*....**
        ...***..*.
        .**...*.*.
        *..**.*.**
        .*......*.
        **.*.**..*
        .*.*...**.
        .*..***...
        **....*...

:SW1T43:  A {Herschel-to-glider} converter that produces a {tandem glider} useful in the {tee} reaction.  It is classified as a "G3" converter because its two gliders are three {lane}s apart.
        .......**........
        .......*.........
        .....*.*.........
        ....*.*..........
        **...*...........
        **...............
        ...........**....
        ...........*.*...
        .............*...
        .............*.**
        ..........**.*.**
        *........*..*....
        *.*.......**.....
        ***..............
        ..*.......****...
        ...........*..*..
        .........*...**..
        .........**......
   Besides the southwest-travelling glider on lane 1, the converter also emits the Herschel's standard {first natural glider}, {SW-2}.  The converter's full standard name is therefore "HSW1T43_SW-2T21".  See {NW31} for an explanation of H-to-G naming conventions.

:SW-2:  The simplest type of {H-to-G} {converter}, where the converter's effect is simply to suppress a Herschel cleanly after allowing its {first natural glider} to escape.  The name should be read as "SW minus two", where -2 is a glider {lane} number.  The complete designation is SW-2T21.  See {NW31T120} for a discussion of the standard naming conventions used for these converters.
     An unlimited number of converters have the SW-2T21 classification.  The variants most often used consist of just one or two small {still life} {catalyst}s.
        ...................................**.....
        ...................................*......
        .................................*.*......
        .............................**..**.......
        .............................**...........
        .....**...................................
        .....**...................................
        .............................**...........
        .............................**...........
        ..........................................
        ..........................................
        ..........................................
        .........**...............................
        .........**...............................
        ..........................................
        *........................*................
        *.*......................*.*..............
        ***......................***..............
        ..*........................*..............
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ..........................................
        ........................................*.
        ...........*...........................*.*
        ..........*.*...........................**
        ..........*.*.............................
        ...........*............................**
        *........................*.............*.*
        *.*......................*.*............*.
        ***......................***..............
        ..*........................*..............

:SW-2T21:  = {SW-2}

:swan: (c/4 diagonally, p4)  A diagonal {spaceship} producing some useful sparks.  Found by Tim Coe in February 1996.
        .*..........**..........
        *****......**...........
        *..**........*.......**.
        ..**.*.....**......***.*
        ...........**...*.**....
        .....*.*......**........
        ..........***.*....*....
        .......***...*....*.....
        ........*.......*.......
        ........*......*........
        ........................
        ...........*............

:swimmer:  = {switch engine}.

:swimmer lane:  = {switch engine channel}.

:switch:  A {signal}-carrying {circuit} that can send output signals to two or more different locations, depending on the state of the mechanism.  These may be {toggle circuit}s, where the state of the switch changes after each use.  They may be {latches}, where one bit of information can be stored by a SET input signal, but then the mechanism returns to its original state as soon as a separate RESET signal is received and an output is sent in one of two directions based on the state of the switch -- see {demultiplexer} for an example.  Or they may be {permanent switch}es that retain the same state through many uses until a change is made with a separate signal.

     More generally, any circuit may be referred to as a switch, if it can alter its output based on stored information.  For example, the following simple mechanism based on an eater2 was discovered by Emerson J. Perkins in 2007.  It either reflects or absorbs an incoming signal, depending on the presence or absence of a nearby block.  The block is removed if a reflection occurs.
        ...*.....................*....................
        ....*...................*.*...................
        ..***...................*.*...................
        ......................***.**................*.
        ..................*..*....................***.
        ................***...***.**...**........*....
        ...............*........*.**...**........**...
        ...............**.............................
        **............................................
        .*............................................
        .*.**.........................................
        ..*..*....................................**..
        ...**.....................................*.*.
        ..................**........................*.
        ..................**........................**
        ..................................***.........
        ..................................*...........
        ...................................*..........
        ..............................................
        ..........................*...**..............
        .........................*.*...*..............
        .....................**.*.*...*...............
        .....................**.*....*................
        .........................*****.*..............
        .................**.*.**.*....**...........***
        .................*.**.*..*.**..............*..
        ..........**............**.*.***............*.
        ..........**...................*..............
     The switching signal here is a glider produced by a high-clearance {syringe} variant found by Matthias Merzenich.  The syringe is not technically part of the switch mechanism; any standard {Herschel} source can deliver the signal to the block {factory} (the two {eater1}s on the right side of the pattern).  Alternate {converter} mechanisms could also be used to place the block.  This mechanism would be classified as a latch:  it can not successfully accept two successive SET signals from the northwest, but consecutive RESETs are fine, as shown by the two test gliders from the southeast.
     An earlier example of the same type of latch / one-time switch mechanism, also mediated by a block, can be found in the NW34T204 {H-to-G}.  See also {bistable switch} for a very robust and versatile toggle switch with two input {lane}s and four possible outputs.

:switchable gun:  A {gun} that includes a mechanism to turn the output stream off and on with simple signals, often gliders.  A small example is Dieter Leithner's switchable LWSS gun from July 8, 1995.  The ON signal enters from the northeast, and the OFF signal from the northwest:
        .................**...........................................
        .................*..*.........................................
        ..............................................................
        .....................*........................................
        ..............................................................
        .*.................**.........................................
        ..*...............*...........................................
        ***...........................................................
        ..............................................................
        ...............**...**........................................
        ...............**...**........................................
        ................*****........................*................
        .................*.*........................*.................
        ............................................***...............
        .................***..........................................
        ....................................*.*.......................
        ....................................*...*.....................
        ........................................*.......*.............
        ..........................**........*....*....****............
        ..........................**............*....*.*.**...........
        .....................*..............*...*...*..*.***........**
        ......................*.............*.*......*.*.**.........**
        ....................***.......................****............
        ................*...............................*.............
        ...............***...................*........................
        ..............*****..................*.*.....*................
        .............**...**.................**....***................
        ..........................................*...................
        .............................*............**..................
        ...........................*..*.........***...................
        ...............***..........***.........**....................
        ...............***..........*..........*.*....................
        .............................*................................
        .............................***..............................
        ................**............................................
        ................**............................................
        .....................*........................................
        ...................****......**..**...........................
        .............**...*.*.**.....****.*..*.*......................
        .............**..*..*.***.....**.*...*...*....................
        ..................*.*.**....*............*.....**.............
        ...................****..............*....*....**.............
        .....................*...................*....................
        .....................................*...*....................
        .....................................*.*......................

:switch engine:  The following pattern discovered by Charles Corderman in 1971, which is a {glide symmetric} unstable {puffer} which moves diagonally at a speed of c/12 (8 cells every 96 generations).
        .*.*..
        *.....
        .*..*.
        ...***
     The {exhaust} is {dirty} and unfortunately catches up and destroys the switch engine before it runs 13 full periods.  Corderman found several ways to stabilize the switch engine to produce {puffer}s, using either one or two switch engines in tandem.  See {stabilized switch engine} and {ark}.
     No {spaceship}s were able to be made from switch engines until Dean Hickerson found the first one in April 1991 (see {Cordership}).  Switch engine {technology} is now well-advanced, producing many c/12 diagonal spaceships, puffers, and rakes of many periods.
     Small {polyomino}es exist whose {evolution} results in a switch engine. See {nonomino switch engine predecessor}.
     Several three-glider collisions produce {dirty} reactions that produce a stabilized switch engine along with other {ash}, making {infinite growth}.  Until recently the only known syntheses for {clean} unstabilized switch engines used four or more gliders.  There are several such recipes.  In the reaction shown below no glider arrives from the direction that the switch engine will travel to, making it easier to repeat the reaction:
        ***................
        ..*................
        .*.................
        ...................
        .......**..........
        ......**...........
        ........*..........
        ...................
        ...................
        ...................
        ...................
        ...................
        ...................
        ...................
        ..**...............
        .*.*...............
        ...*...............
        ...................
        ................***
        ................*..
        .................*.
   Running the above for 20 ticks completes a {kickback} reaction with the top two gliders, resulting in the three-glider switch engine recipe discovered by Luka Okanishi on 12 March 2017.

:switch engine channel:  Two lines of {boat}s (or other suitable objects, such as {tub with tail}s) arranged so that a {switch engine} can travel between them, in the following manner:
        ..............**................
        .............*.*................
        ..............*.................
        ................................
        ................................
        ................................
        ................................
        ................................
        .......***............**........
        ........*..*.........*.*........
        ............*.........*.........
        .........*.*....................
        ................................
        ................................
        ................................
        ................................
        ..............................**
        .............................*.*
        ..............................*.
        ................................
        ................................
        .*..............................
        *.*.............................
        **..............................
        ................................
        ................................
        ................................
        ................................
        ................................
        .........*......................
        ........*.*.....................
        ........**......................
   David Bell used this in June 2005 to construct a "bobsled" oscillator, in which a switch engine {factory} sends switch engines down a channel, at the other end of which they are deleted.

:switch engine chute:  = {switch engine channel}

:switch-engine ping-pong:  A very large (210515x183739) {quadratic growth} pattern found by Michael Simkin in October 2014.  Currently this is the smallest starting population (23 cells) known to result in a quadratic population growth rate.  Previous record-holders include {Jaws}, {mosquito1}, {mosquito2}, {mosquito3}, {mosquito4}, {mosquito5}, {teeth}, {catacryst}, {metacatacryst}, {Gotts dots}, {wedge}, {26-cell quadratic growth}, {25-cell quadratic growth}, and {24-cell quadratic growth}.

:symmetric:  Any object which can be rotated and/or flipped over an axis and still maintain the same shape.  Many common small objects such as the {block}, {beehive}, {pond}, {loaf}, {clock}, and {blinker} are symmetric.  Some larger symmetric objects are {Kok's galaxy}, {Achim's p16}, {cross}, {Eureka}, and the {pulsar}.
     Large symmetric objects can easily be created by placing multiple copies of any finite object together in a symmetrical way.  Unless the individual objects interact significantly, this is considered trivial and is not considered further here (e.g., two {LWSS}s travelling together a hundred cells apart).
     There are two kinds of symmetry.  Odd symmetry occurs when an object's line of reflection passes through the center of a line of cells.  Objects with odd symmetry have an odd number of columns or rows, and can have a {gutter}.  Even symmetry occurs when the line of reflection follows the boundary between two lines of cells.  Objects with even symmetry have an even number of columns or rows.
     Because the Life universe and its rules are symmetric, all symmetric objects must remain symmetric throughout their {evolution}.  Most non-symmetric objects keep their non-symmetry as they evolve, but some can become symmetric, especially if they result in a single object.  Here is a slightly more complicated example where two gliders interact to form a {blockade}:
        ..*.........
        *.*.........
        .**........*
        .........**.
        ..........**
     Many useful objects are symmetric along an orthogonal axis.  This commonly occurs by placing two copies of an object side by side to change the behaviour of the objects due to the inhibition or killing of new cells at their {gutter} interface.  Examples of this are {twin bees shuttle}, {centinal}, and the object shown in {puffer}.  Other useful symmetric objects are created by perturbing a symmetric object using nearby {oscillator}s or {spaceship}s in a symmetric manner.  Examples of this are {Schick engine}, {blinker ship}, and {hivenudger}.
     Many {spaceship}s found by {search program}s are symmetric because the search space for such objects is much smaller than for non-symmetrical spaceships.  Examples include {dart}, {60P5H2V0}, and {119P4H1V0}.

:synchronized:  Indicates that precise relative timing is required for two or more input {signal}s entering a {circuit}, or two or more sets of {glider}s participating in a {glider synthesis}.  Compare {asynchronous}.  See also {salvo} and {slow glider construction}.

:synchronous:   = {synchronized}

:synthesis:  = {glider synthesis}

:syringe:  A small stable {converter} found by Tanner Jacobi in March 2015, accepting a glider as input and producing an output {Herschel}  As of June 2018 it is the smallest known converter of this type, so it is very often used to handle input gliders in complex {signal} {circuit}ry, as described in {Herschel circuit}.  A second glider can safely follow the first any time after 78 ticks, but {overclocking} also allows the syringe to work at a {repeat time} of 74 or 75 ticks.  If followed by a {dependent conduit} a simple {eater2} can be used instead of the large {weld}ed {catalyst} shown here.  A {ghost Herschel} marks the output location.
        ....*.............................
        .....*............................
        ...***............................
        ..................*...............
        ................***...............
        ...............*..................
        ...............**.................
        **................................
        .*................................
        .*.**.............................
        ..*..*.......................*....
        ...**........................*....
        ..................**.........***..
        ..................**...........*..
        ..................................
        ..................................
        ..................................
        ...........................*...**.
        ..........................*.*...*.
        .........................*.*...*..
        .....................**.*.*...*...
        .....................**.*..****.*.
        .........................*.*...*.*
        .....................**.**..*..*.*
        ......................*.*..**...*.
        ..........**..........*.*.........
        ..........**...........*..........
     A different version of the large catalyst, with better {clearance} for some situations, can be seen in the {switch} entry.