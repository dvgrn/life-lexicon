:L112:  A {composite conduit}, one of the original sixteen {Herschel conduit}s, discovered by Dave Buckingham in July 1996.  It is made up of two {elementary conduit}s, HLx53B +  {BFx59H}.  After 112 ticks, it produces a {Herschel} turned 90 degrees counterclockwise at (12, -33) relative to the input.  Its {recovery time} is 61 ticks; this can be reduced slightly by removing the output glider, either with a specialized eater (as in the original {true} p59 gun), or with a {sparker} as in most of the {Quetzal} guns.  It can be made {Spartan} by replacing the {aircraft carrier} with an {eater1}.  A {ghost Herschel} in the pattern below marks the output location:
        ...............**.......
        ...............*........
        .............***........
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        .............**.........
        .............**.........
        ....**..................
        ....*..*................
        **....**................
        .*....................**
        .*.*..................*.
        ..**................*.*.
        ....................**..
        ........................
        ........................
        ........................
        ........................
        ........................
        ..*.....................
        ..*.*...................
        ..***...................
        ....*...................
        ........................
        ..............**........
        ..............**..**....
        ..................*.*...
        ....................*...
        ....................**..

:L156:  A {composite conduit}, one of the original sixteen {Herschel conduit}s, discovered by Dave Buckingham in August 1996.  It is made up of three {elementary conduit}s, HLx69R + {RF28B} + {BFx59H}.  After 156 ticks, it produces a {Herschel} turned 90 degrees counterclockwise at (17, -41) relative to the input.  Its {recovery time} is 62 ticks.  It can be made {Spartan} by replacing the {snake} with an {eater1} in one of two orientations.  Additional gliders can be produced by removing the southeasternmost eater, or by replacing the RF28B elementary conduit by an alternate version.  A {ghost Herschel} in the pattern below marks the output location:
        ...................**........
        ...................*.........
        .................***.........
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .................**..........
        .................**..........
        .............................
        ........**.*.................
        ........*.**.................
        ..........................**.
        ..........................*..
        ........................*.*..
        ........................**...
        .............................
        .........*...................
        .........***.................
        *...........*................
        ***........**..............*.
        ...*......................*.*
        ..**.......................*.
        .............................
        .............................
        .............................
        .............................
        .............................
        .............................
        .*....................**.....
        .*.*..................*.*....
        .***....................*....
        ...*...........**.......**...
        ...............*.............
        ................***..........
        ..................*..........

:lake: (p1)   Any still life consisting of a simple closed curve made from diagonally connected {domino}es.  The smallest example is the {pond}, and the next smallest is this (to which the term is sometimes restricted):
        ....**....
        ...*..*...
        ...*..*...
        .**....**.
        *........*
        *........*
        .**....**.
        ...*..*...
        ...*..*...
        ....**....

:lane:  A path traveled by a glider, or less commonly a spaceship such as a loafer.  The lane is centered on the line of symmetry (if any) of the spaceship in question.  If a lane is clear, then the spaceship can travel along it without colliding or interfering with any other objects.
     Diagonal lanes are often numbered consecutively, in half-diagonals ({hd}).  Occasionally diagonal lane measurements are given in quarter-diagonals ({qd}), in part because diagonally symmetric spaceships have a line of symmetry 1qd away from the lines available for gliders.  It's also convenient that moving a glider forward by 100qd (for example) has the same effect as evolving the same glider for 100 ticks.

:Laputa: (p2)  Found by Rich Schroeppel, September 1992.
        ...**.**....
        ...**.*...**
        ........*..*
        .******.***.
        *..*.*......
        **...*.**...
        ....**.**...

:large prime oscillator:  Any oscillator with a relatively small {bounding box} whose period is a very large prime.  (If the bounding-box restriction is removed, then eight gliders travelling in a four-{Snark} loop would provide a trivial example for any chosen prime.)  The first such oscillator was built by Gabriel Nivasch in 2003.  The current record holder is an oscillator constructed by Adam P. Goucher with a period that is a Mersenne prime with 13,395 digits (2^44497-1).
     The next higher Mersenne-prime oscillator, period 2^86243-1, could be constructed with {quadri-Snark}s and {semi-Snark}s.  It would actually be significantly smaller than the current record holder.  As of June 2018 the construction of this pattern has not yet been completed.

:large S:  = {big S}

:latch:  A type of single-use {switch}, where the mechanism accepts a SET {signal} and remembers that that signal has come in.  A RESET signal is later sent in on a different path; this separate input makes a latch different from a toggle circuit. If a SET signal has been detected since the last RESET, an output signal is generated in response.  Often but not always, a different output signal is generated if there has been no previous SET signal.

     The term is taken from electronic circuitry.  Nominally a latch has two inputs, SET and RESET, and only one output.  However, there are often two output signal paths, one the XOR inverse of the other.

     In the context of {stable} {glider} signals, a {demultiplexer} can be used as a latch.  The {Herschel} input is the SET signal, and a glider is the RESET.  If the latch has been set by a Herschel since the last RESET, the glider will be reflected 90 degrees; otherwise it passes through the demultiplexer unaffected.

:Lidka: (stabilizes at time 29053)  A {methuselah} found by Andrzej Okrasinski in July 2005.
        ..........***..
        ..........*....
        ..........*...*
        ...........*..*
        ............***
        ...............
        .*.............
        *.*............
        .*.............
   The following variant, pointed out by David Bell, has two fewer cells and lasts two generations longer.
        ..........***..
        ...............
        ...........**.*
        ............*.*
        ..............*
        ...............
        .*.............
        *.*............
        .*.............

:Life:  A 2-dimensional 2-state {cellular automaton} discovered by John Conway in 1970.  The states are referred to as ON and OFF (or live and dead).  The transition rule is as follows: a cell that is ON will remain ON in the next generation if and only if exactly 2 or 3 of the 8 adjacent cells are also ON, and a cell that is OFF will turn ON if and only if exactly 3 of the 8 adjacent cells are ON.  (This is more succinctly stated as: "If 2 of your 8 nearest neighbours are ON, don't change.  If 3 are ON, turn ON.  Otherwise, turn OFF.")

:Life32:  A freeware Life program by Johan Bontes for Microsoft Windows 95/98/ME/NT/2000/XP: {https://github.com/JBontes/Life32/}.

:LifeHistory:  A multistate CA rule supported by {Golly}, equivalent to two-state B3/S23 Life but with several additional states intended for annotation purposes.  A "history" state records whether an off cell has ever turned on in the past, and other states allow on and off cells to be permanently or temporarily marked, without affecting the {evolution} of the pattern.

:LifeLab:  A shareware Life program by Andrew Trevorrow for the Macintosh (MacOS 8.6 or later): {http://www.trevorrow.com/lifelab/}.

:LifeLine:  A newsletter edited by Robert Wainwright from 1971 to 1973. During this period it was the main forum for discussions about Life. The newsletter was nominally quarterly, but the actual dates of its eleven issues were as follows:
        Mar, Jun, Sep, Dec 1971
        Sep, Oct, Nov, Dec 1972
        Mar, Jun, Sep 1973

:Lifenthusiast:  A Life enthusiast.  Term coined by Robert Wainwright.

:lifesrc:  David Bell's Life {search program} for finding new {spaceship}s and {oscillator}s.  This is a C implementation of an algorithm developed by Dean Hickerson in 6502 assembler.
     Although lifesrc itself is a command-line program, Jason Summers has made a GUI version called {WinLifeSearch} for Microsoft Windows.  A Java version, {JavaLifeSearch}, was written in November 2012 by Karel Suhajda.
     The lifesrc algorithm is only useful for very small periods, as the amount of computing power required rises rapidly with increasing period.  For most purposes, period 7 is the practical limit with current hardware.
     Lifesrc is available from {http://tip.net.au/~dbell/} (source code only).  Compare {gfind}.

:LifeViewer:  A scriptable Javascript Life pattern viewer written by Chris Rowett, used primarily on the conwaylife.com discussion forums.

:light bulb: (p2)  Found in 1971.
        .**.*..
        .*.**..
        .......
        ..***..
        .*...*.
        .*...*.
        ..*.*..
        *.*.*.*
        **...**
   The same {rotor} can be embedded in a slightly smaller {stator} like this:
        ...*.....
        .***.....
        *........
        ******...
        ......*..
        ..*...*..
        ..**.*...
        ......***
        ........*

:lightspeed bubble:  A type of {negative spaceship} travelling through the {zebra stripes} agar.  The center of the bubble is simple empty space, and the length and/or width of the bubble can usually be extended to any desired size.
     Below is a small stabilized section of agar containing a sample lightspeed bubble, found by Gabriel Nivasch in August 1999.  The bubble travels to the left at the {speed of light}, so it will eventually reach the edge of any finite patch and destroy itself and its supporting agar.
        .*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*...
        .************************************************************.
        .............................................................*
        .*************..***..***..***********************************.
        *..............**...**...**........*..........................
        .*************...**...**...*.**.*....************************.
        .............................**.....*........................*
        .*************.................******************************.
        *...............................*.............................
        .*************...................****************************.
        .................................*....*......................*
        .*************...................**....**********************.
        *................................*.....*....*.................
        .*************...................**....**....****************.
        .................................*.....*.....*....*..........*
        .*************...................**....**....**....**********.
        *................................*.....*.....*.....*....*.....
        .*************...................**....**....**....**....****.
        .................................*.....*.....*.....*.....*...*
        .*************...................**....**....**....**....****.
        *................................*.....*.....*.....*....*.....
        .*************...................**....**....**....**********.
        .................................*.....*.....*....*..........*
        .*************...................**....**....****************.
        *................................*.....*....*.................
        .*************...................**....**********************.
        .................................*....*......................*
        .*************...................****************************.
        *...............................*.............................
        .*************.................******************************.
        .............................**.....*........................*
        .*************...**...**...*.**.*....************************.
        *..............**...**...**........*..........................
        .*************..***..***..***********************************.
        .............................................................*
        .************************************************************.
        .*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*...
     An open problem related to lightspeed bubbles was whether large extensible empty areas could be created whose length was not proportional to the width (as it must be in the above case, due to the tapering back edge).  This was solved in February 2017 by Arie Paap; a simple period-2 solution is shown below.
        ...*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*...
        .***********************************************************.
        *...........................................................*
        .***********************************************************.
        .............................................................
        .***********************************************************.
        *.....................................................*.....*
        .********************..***..***..***..********..****...*****.
        ......................**...**...**...**........**.....*......
        .********************...**...**...**...*******...*.**..*****.
        *.........................................*........**.......*
        .********************......................**.*......*******.
        ...........................................*............*....
        .********************......................*.............***.
        *..........................................**.....**....*...*
        .********************......................**...**...*.*****.
        ...........................................*..*.**...*.......
        .********************......................*......**...*****.
        *..........................................**..........*....*
        .********************......................**..........*****.
        ...........................................*......**.*.......
        .********************......................*..*.**...*.*****.
        *..........................................**...**......*...*
        .********************......................**.....**.....***.
        ...........................................*............*....
        .********************......................*...........*****.
        *..........................................**.....**.**.....*
        .********************......................**...**...**..***.
        ...........................................*..*.**.....**....
        .********************......................*......**....****.
        *..........................................**...............*
        .********************......................**...........****.
        ...........................................*......**...**....
        .********************......................*..*.**...**..***.
        *..........................................**...**...**.....*
        .********************......................**.....**...*****.
        ...........................................*............*....
        .**********************.....*.....*.....*..*.*...........***.
        *.........................**....**....**...*...*.*.......*..*
        .************************.**.**.**.**.**.*********.......***.
        ........................................................*....
        .*************************************************...*******.
        *..................................................**.......*
        .*************************************************..********.
        .............................................................
        .***********************************************************.
        *...........................................................*
        .***********************************************************.
        ...*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*..*...

:lightspeed ribbon:  = {superstring}

:lightspeed telegraph:  = {telegraph}.

:lightspeed wire:  Any {wick} that can {burn} non-destructively at the speed of light.  Lightspeed wires are a type of {reburnable fuse}.  These are potentially useful for various things, but so far the necessary mechanisms are very large and unwieldy.  In October 2002, Jason Summers discovered a lightspeed reaction travelling through an orthogonal chain of beehives.  Summers completed a period-1440 lightspeed {telegraph} based on this reaction in 2003.
        ...*...........................................................
        .*...*.........................................................
        .*....*....**.**...............................................
        *......*...******...**...**...**...**...**...**...**...**...**.
        *......*..*......*.*..*.*..*.*..*.*..*.*..*.*..*.*..*.*..*.*..*
        **.....*...******...**...**...**...**...**...**...**...**...**.
        ......*....**.**...............................................
        ....*..........................................................
     A {stable} lightspeed {transceiver} mechanism using this same signal reaction, the {p1 telegraph}, was constructed by Adam P. Goucher in 2010; the bounding boxes of both the {transmitter} and {receiver} are over 5000 cells on a side.  A more compact periodic {high-bandwidth telegraph} with a much improved transmission rate was completed by Louis-Francois Handfield in 2017.
     The following diagram shows an older example of a lightspeed wire, with a small defect that travels along it at the speed of light.  As of June 2018, no method has been found of creating such a defect in the upstream end of this particular stable wire, or of non-destructively detecting the arrival of the defect and repairing the wire at the downstream end.
        ....**..**..**..**..**..**..**..**..**..**..**..**..**....
        ....**..**..**..**..**..**..**..**..**..**..**..**..**....
        ..........................................................
        ..******************************************************..
        .*......*...............................................*.
        *.*****....*********************************************.*
        .*.....*................................................*.
        ..******************************************************..
        ..........................................................
        ....**..**..**..**..**..**..**..**..**..**..**..**..**....
        ....**..**..**..**..**..**..**..**..**..**..**..**..**....

:lightweight emulator:  = {LW emulator}

:lightweight spaceship:  = {LWSS}

:lightweight volcano:  = {toaster}

:linear growth:  A growth rate proportional to T, where T is the number of ticks that a pattern has been run.  Compare {superlinear growth}, {quadratic growth}.

:linear propagator:  A self-replicating pattern in which each copy of a pattern produces one child that is an exact copy of itself.  The child pattern then blocks the parent from any further replication.  An example was constructed by Dave Greene on 23 November 2013, with a construction arm using two glider lanes separated by {9hd}.  By some definitions, due to its limited one-dimensional growth pattern, the linear propagator is not a true replicator.  Compare {quadratic replicator}.

:line crosser:  A pattern able to send a signal across an infinite diagonal line of live cells without destroying the line.  David Bell built one in August 2006.  It uses many synchronized one-shot period 44160 {glider gun}s on both sides of the line.  In 2018, using variants of the reactions shown in {line-cutting reaction} and {line-mending reaction}, Dave Greene built a smaller {stable} version that can accept gliders with any timing, as long as they are separated by 501 or more ticks.

:line-cutting reaction:  A reaction that can cut an infinite diagonal line of cells, leaving a gap with both ends sealed.  A mechanism for this was first demonstrated in 2006.  The improved recipe shown below was used in a {stable} {line crosser} constructed in 2018..  See {line-mending reaction} for a way to mend the gap.
        ...................................................**
        ....................................................*
        ...................................................*.
        ..................................................*..
        .................................................*...
        ................................................*....
        ...............................................*.....
        ..............................................*......
        .............................................*.......
        ............................................*........
        ...........................................*.........
        ..........................................*..........
        .........................................*...*.*.....
        ........................................*....**....*.
        .......................................*......*...*..
        ......................................*...........***
        .....................................*...............
        ....................................*................
        ...................................*.................
        ..................................*..................
        .................................*...................
        ................................*....................
        ...............................*.....................
        ..............................*......................
        .............................*.......................
        ............................*........................
        ...........................*....*....................
        ..........................*....*.....................
        .........................*.....***...................
        ........................*............................
        .......................*.............................
        ......................*..............................
        .....................*......**.......................
        ....................*......*.*.......................
        ...................*.........*.......................
        ..................*..................................
        .................*...................................
        ................*....................................
        ...............*...............................***...
        ..............*................................*.....
        .............*..................................*....
        ............*.............................***........
        ...........*..............................*..........
        ..........*................................*.........
        .........*...........................................
        ........*...**.......................................
        .......*...*.*.......................................
        ......*......*.........................*.............
        .....*................................**.............
        ....*.................................*.*............
        ...*..........*......................................
        *.*...........**.....................................
        **...........*.*.....................................

:line-mending reaction:  A reaction which can fully mend a sealed gap in an infinite diagonal line of cells, such as the one produced by a {line-cutting reaction}.  Such a reaction is demonstrated below, in two stages; the second stage can be subdivided if necessary, at the cost of two additional gliders.  See {BNE14T30} for one way of creating the {glider}s travelling parallel to the lines.
        .....................**..................................
        ......................*..................................
        .....................*...................................
        ....................*....................................
        ...................*.....................................
        ..................*......................................
        .................*.......................................
        .................**......................................
        ...........................................**........*...
        ............................................*.......*....
        ...........................................*........***..
        ..........................................*..............
        .........................................*...............
        ........................................*................
        .......................................*.................
        ......................................*..................
        .....................................*...................
        ......**..............*.............*....................
        .....*.*.............**............*.....................
        ....*............**..*.*..........*......................
        ...*............*.*..............*.......................
        *.*...............*.............*........................
        **..............................**.......................
        .........**..........................*.*.................
        ........*.*..........................**..***.............
        ..........*................***........*..*...............
        ..........................................*...........*.*
        .........................*............................**.
        .........................*........**...................*.
        .........................*.......**......................
        ...................................*.....................
        .........................................................
        .....................**..................................
        ....................*.*......*...........................
        ...................*........**...........................
        ..................*.........*.*...........***............
        .................*........................*..............
        ................*......**..................*.............
        ...............*........**...............................
        ..............*........*.................................
        .............*...........................................
        ............*...........**......................***......
        ...........*............*.*........**...........*........
        ........*.*.............*..........*.*...........*.......
        ........**.........................*.....................
        .........................................................
        .........................................................
        .........................................................
        .........................................**..............
        .........................................*.*.............
        .........................................*...............
        .........................................................
        .........**..............................................
        ........*.*..............................................
        ..........*...............**.............................
        ...........................**............................
        ..........................*..............................
     This reaction uses only gliders on the near side of the line, unlike the original line-cutting reaction in which spaceships on both sides had to be synchronized with each other, for example by passing a glider through the gap to trigger the creation of the required spaceships and gliders.
     It is technically possible to use {construction arm} {technology} to push an {elbow} through the gap and use it to build any desired glider-constructible object on the other side.

:line puffer:  A {puffer} which produces its output by means of an orthogonal line of cells at right angles to the direction of travel. The archetypal line puffer was found by Alan Hensel in March 1994, based on a {spaceship} found earlier that month by Hartmut Holzwart. The following month Holzwart found a way to make {extensible} c/2 line puffers, and Hensel found a much smaller stabilization the following day.  But in October 1995 Tim Coe discovered that for large widths these were often unstable, although typically lasting millions of generations.  In May 1996, however, Coe found a way to fix the instability.  The resulting puffers appear to be completely stable and to exhibit an exponential increase in period as a function of width, although neither of these things has been proved.
     Line puffers have enabled the construction of various difficult periods for c/2 spaceships and puffers, including occasionally periods which are not multiples of 4 and which would therefore be impossible to attain with the usual type of construction based on {standard spaceship}s.  (See {frothing puffer} for another method of constructing such periods.)  In particular, the first c/2 {rake} with period not divisible by 4 was achieved in January 2000 when David Bell constructed a p42 {backrake} by means of line puffers.
     See also {hivenudger} and {puff suppressor}.

:line ship:  A {spaceship} in which the front end is a {linestretcher}, the line being eaten by the back end.

:linestretcher:  A {wickstretcher} that stretches a single diagonal line of cells.  The first example was constructed by Jason Summers in March 1999; this was c/12 and used {switch engine} based puffers found earlier by Dean Hickerson.  The first c/4 example was found by Hartmut Holzwart in November 2004.

:loading dock: (p3)  Found by Dave Buckingham, September 1972.
        ....*....
        ..***....
        .*...**..
        *.**...*.
        .*...**.*
        ..**...*.
        ....***..
        ....*....

:loaf: (p1)
        .**.
        *..*
        .*.*
        ..*.

:loafer: (c/7 orthogonally, p7)  A small {c/7 spaceship} discovered by Josh Ball on 17 February 2013:
        .**..*.**
        *..*..**.
        .*.*.....
        ..*......
        ........*
        ......***
        .....*...
        ......*..
        .......**
     It has a known 8-glider construction recipe, probably not minimal, discovered on the following day:
        .................................*
        ...............................**.
        ................................**
        .........*........................
        .*........*.......................
        ..*.....***.......................
        ***...............................
        ..................................
        ..................................
        .....*............................
        ......*...........................
        ....***...........................
        ........................*.*.......
        .........................**.......
        .........................*........
        ..................................
        ...........................*.*....
        ...........................**.....
        ............................*.....
        ...............................***
        ...............................*..
        ................................*.
        ..................................
        ..................................
        ..................................
        ..................................
        ..................................
        ..................................
        .....**...........................
        ......**..........................
        .....*............................
   The loafer was therefore the first new glider-constructible spaceship in almost a decade.  (A {glider synthesis} for a 2c/5 ship, {60P5H2V0}, was found in March 2003.)

:loaflipflop: (p15)  Here four {pentadecathlon}s {hassle} a {loaf}. Found by Robert Wainwright in 1990.
        ................*.................
        ...............***................
        ..................................
        ..................................
        ...............***................
        ..................................
        ...............*.*................
        ...............*.*................
        ..................................
        ...............***................
        ..................................
        ..................................
        ...............***................
        ................*.................
        ..................................
        .*..*.**.*..*...............**....
        **..*....*..**...**.......*....*..
        .*..*.**.*..*...*..*.....*......*.
        ................*.*.....*........*
        .................*......*........*
        ........................*........*
        .........................*......*.
        ..........................*....*..
        ............................**....
        ..................***.............
        .................*...*............
        ................*.....*...........
        ..................................
        ...............*.......*..........
        ...............*.......*..........
        ..................................
        ................*.....*...........
        .................*...*............
        ..................***.............

:loaf on loaf:  = {bi-loaf}

:loaf pull:  The following glider/loaf collision, which pulls a loaf (3,1) toward the glider source:
        .*.....
        *.*....
        *..*...
        .**....
        .......
        .......
        ....***
        ....*..
        .....*.

:loaf siamese barge: (p1)
        ..**.
        .*..*
        *.*.*
        .*.*.
        ..*..

:lobster: (c/7 diagonally, p7)  A spaceship discovered by Matthias Merzenich in August 2011, the first diagonally travelling {c/7 spaceship} to be found. It consists of two {glider}s pulling a {tagalong} that then rephases them.
        ............***...........
        ............*.............
        .............*..**........
        ................**........
        ............**............
        .............**...........
        ............*..*..........
        ..........................
        ..............*..*........
        ..............*...*.......
        ...............***.*......
        ....................*.....
        **..*.*.............*.....
        *.*.**.............*......
        *....*..**.............**.
        ......*...*......**..**..*
        ..**......*......*..*.....
        ..**....*.*....**.........
        .........*.....*...*...*..
        ..........*..*....**......
        ...........**...*.....*.*.
        ...............*........**
        ...............*....*.....
        ..............*...*.......
        ..............*.....**....
        ...............*.....*....

:logarithmic growth:  A pattern whose {population} or {bounding box} grows no faster than logarithmically, asymptotic to n.log(t) for some constant n.  The first such pattern constructed was the {caber tosser} whose population is logarithmic, but whose bounding box still grows linearly.  The first pattern whose bounding box and population both grow logarithmically was constructed by Jason Summers with Gabriel Nivasch in 2003.  For a pattern with a slower growth rate than this, see {Osqrtlogt}.

:LoM:  = {lumps of muck}

:lone dot agar:  An {agar} in which every live cell is isolated in every generation.  There are many different lone dot agars.  All of them are {phoenix}es.  In 1995 Dean Hickerson and Alan W. Hensel found stabilizations for finite patches of ten lone dot agars to create period 2 oscillators.  One of these is shown below:
        ....**..**..**..**..**..**..**..**....
        ....*..*.*..*..*.*..*..*.*..*..*.*....
        .....*.......*.......*.......*........
        ........*.......*.......*.......*.....
        **..*.*.....*.*.....*.*.....*.*.....**
        *.*.....*.*.....*.*.....*.*.....*.*..*
        ....*.......*.......*.......*.......*.
        .*.......*.......*.......*.......*....
        *..*.*.....*.*.....*.*.....*.*.....*.*
        **.....*.*.....*.*.....*.*.....*.*..**
        .....*.......*.......*.......*........
        ........*.......*.......*.......*.....
        **..*.*.....*.*.....*.*.....*.*.....**
        *.*.....*.*.....*.*.....*.*.....*.*..*
        ....*.......*.......*.......*.......*.
        .*.......*.......*.......*.......*....
        *..*.*.....*.*.....*.*.....*.*.....*.*
        **.....*.*.....*.*.....*.*.....*.*..**
        .....*.......*.......*.......*........
        ........*.......*.......*.......*.....
        **..*.*.....*.*.....*.*.....*.*.....**
        *.*.....*.*.....*.*.....*.*.....*.*..*
        ....*.......*.......*.......*.......*.
        .*.......*.......*.......*.......*....
        *..*.*.....*.*.....*.*.....*.*.....*.*
        **.....*.*.....*.*.....*.*.....*.*..**
        .....*.......*.......*.......*........
        ........*.......*.......*.......*.....
        **..*.*.....*.*.....*.*.....*.*.....**
        *.*.....*.*.....*.*.....*.*.....*.*..*
        ....*.......*.......*.......*.......*.
        .*.......*.......*.......*.......*....
        *..*.*.....*.*.....*.*.....*.*.....*.*
        **.....*.*.....*.*.....*.*.....*.*..**
        .....*.......*.......*.......*........
        ........*.......*.......*.......*.....
        ....*.*..*..*.*..*..*.*..*..*.*..*....
        ....**..**..**..**..**..**..**..**....

:lonely bee:  = {worker bee}

:long:  A term applied to an object that is of the same basic form as some standard object, but longer.  For examples see {long barge}, {long boat}, {long bookend}, {long canoe}, {long shillelagh}, {long ship} and {long snake}.

:long^3:  The next degree of longness after {long long}.  Some people prefer "extra long".

:long^4:  The next degree of longness after {long^3}.  Some people prefer "extra extra long".

:long barge: (p1)
        .*...
        *.*..
        .*.*.
        ..*.*
        ...*.

:long boat: (p1)
        .*..
        *.*.
        .*.*
        ..**
   A long boat can be used as a 90-degree or 180-degree {one-time} {turner}.

:long bookend:  The following {induction coil}, longer than a {bookend}.
        ...**
        *...*
        ****.

:long canoe: (p1)
        ....**
        .....*
        ....*.
        ...*..
        *.*...
        **....

:long hat:  = {loop}

:long hook:  = {long bookend}

:long house:  = {dock}

:long integral: (p1)
        ..**
        .*.*
        .*..
        ..*.
        *.*.
        **..

:long long:  The next degree of longness after {long}.  Some people prefer "very long".

:long long barge: (p1)
        .*....
        *.*...
        .*.*..
        ..*.*.
        ...*.*
        ....*.

:long long boat: (p1)
        .*...
        *.*..
        .*.*.
        ..*.*
        ...**

:long long canoe: (p1)
        .....**
        ......*
        .....*.
        ....*..
        ...*...
        *.*....
        **.....

:long long ship: (p1)
        **...
        *.*..
        .*.*.
        ..*.*
        ...**

:long long snake: (p1)
        **....
        *.*...
        ...*.*
        ....**

:long shillelagh: (p1)
        **..**
        *..*.*
        .**...

:long ship: (p1)
        **..
        *.*.
        .*.*
        ..**

:long sinking ship:  = {long canoe}

:long snake: (p1)
        **...
        *.*.*
        ...**

:loop: (p1)
        .**..
        *..*.
        .*.*.
        **.**

:looping spaceship:  = {reflectorless rotating oscillator}

:lossless elbow:  A stationary {elbow} in a {construction arm} {toolkit} that allows a {recipe} to turn a corner with no exponential increase in construction cost.  Compare {slow elbow}.  It is theoretically possible to construct lossless elbows for early construction arms such as the one in the {10hd Demonoid}, but these would currently have to be very large.
     The lossless elbow that has been used the most in practice is the {Snark}, which can be constructed directly on a {single-channel} {construction lane} using a {Snarkmaker} {recipe}.  Controlled demolition of a Snark is also possible, to remove a temporary elbow that is no longer needed, and leave a {hand} target in its place if necessary for further construction.
     A {Silver reflector} was used as a lossless elbow in the first {spiral growth} pattern, attached to a separate {universal constructor} component.

:low-density Life:  = {sparse Life}

:lumps of muck:  The common evolutionary sequence that ends in the {blockade}.  The name is sometimes used of the blockade itself, and can in general be used of any stage of the evolution of the {stairstep hexomino}.

:LW emulator: (p4)  The smallest (and least useful) {emulator}, found by Robert Wainwright in June 1980.
        ..**.*..*.**..
        ..*........*..
        ...**....**...
        ***..****..***
        *..*......*..*
        .**........**.

:LWSS: (c/2 orthogonally, p4)  A lightweight spaceship, the smallest known orthogonally moving {spaceship}, and the second most common (after the {glider}).  Found by Conway when one formed from a random soup in 1970.  See also {MWSS} and {HWSS}.
        .*..*
        *....
        *...*
        ****.
     The LWSS possesses a {tail spark} which can easily {perturb} other objects which grow into its path.  The spaceship can also perturb some objects in additional ways.  For examples, see {blinker ship}, {hivenudger}, and {puffer train}.
     Dave Buckingham found that the LWSS can be synthesized in several different ways using three gliders, and can be constructed from two gliders and another small object in several more ways.  Here is the fastest {synthesis}:
        .*.....
        *......
        ***....
        .....**
        ....**.
        ......*
        .......
        ..**...
        ...**..
        ..*....

:LWSS emulator:  = {LW emulator}

:LWSS-glider bounce:  The following reaction in which a {LWSS} and a {glider} collide to form a glider heading back between the two input paths:
        .****........
        *...*........
        ....*.....***
        *..*......*..
        ...........*.
   This is one way to {inject} a glider into a existing glider stream.  The {infinite glider hotel} uses this reaction.

:LWSS-LWSS bounce:  The following {symmetric} reaction in which two {LWSS}s collide head-on to form two {glider}s heading apart at 90 degrees from each other.  Compare {LWSS-LWSS deflection}.
        *..*.......*..*
        ....*.....*....
        *...*.....*...*
        .****.....****.
   This provides one way to {inject} a {glider} into a existing glider stream.  Another use is described in {metamorphosis}.

:LWSS-LWSS deflection:  The following symmetric reaction in which two LWSSs collide nearly head-on to form two gliders heading apart at 180 degrees from each other.  Compare {LWSS-LWSS bounce}.
        .........*..*
        ........*....
        ........*...*
        ........****.
        .............
        .****........
        *...*........
        ....*........
        *..*.........

:LWSS-to-G:  See {45-degree MWSS-to-G}.

:LWTDS:  Life Worker Time Deficiency Syndrome.  Term coined by Dieter Leithner to describe the problem of having to divide scarce time between Life and real life.

:LW volcano:  = {toaster}

:Lx200:  A {composite conduit}, one of the original sixteen {Herschel conduit}s, discovered by Paul Callahan in June 1997.  It is made up of two {elementary conduit}s, HL141B + {BFx59H}. The Lx200 and {F166} conduits are the two original {dependent conduit}s (several more have since been discovered.)  After 200 ticks, it produces an inverted {Herschel} turned 90 degrees counterclockwise at (17, -40) relative to the input.  Its {recovery time} is 90 ticks.  It can be made {Spartan} by replacing the {snake}s with {eater1}s in one of two orientations. A {ghost Herschel} in the pattern below marks the output location:
        .....................**.............
        ......................*.............
        ......................***...........
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        .......................**...........
        .......................**...........
        ....................................
        ..............................*.**..
        ..............................**.*..
        ....................................
        ....................................
        ..............*.**..................
        ..............**.*..................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ....................................
        ................................**..
        ................................*.*.
        .**...............................*.
        ***.**............................**
        .**.***.**..........................
        ***.**..**..........................
        **..................................
        ....................................
        ....................................
        ....................................
        ................................**..
        ................................**..
        ....................................
        ......**............................
        .......*............................
        ....***.........................**..
        ....*...........................**..
        ..................**................
        .................*.*................
        .................*..................
        ................**........**........
        ..........................*.........
        ...........................***......
        .............................*......
   The input shown here is a {Herschel great-grandparent}, since the input reaction is catalysed by the {transparent} block before the Herschel's standard form can appear.